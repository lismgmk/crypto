{"version":3,"sources":["a1-root/v1-AllCrypto/TableList/TableList.module.scss","a1-root/common/Preloader/Preloader.module.scss","a1-root/common/Headings/Headings.module.scss","a1-root/common/Pagination/Pagination.module.scss","a1-root/Header/Header.module.scss","API/cryptoAPI.ts","Redusers/MainCryptoReduser.ts","a1-root/common/Pagination/usePagination.tsx","a1-root/common/Pagination/Pagination.tsx","a1-root/common/Pagination/PaginationWrapper.tsx","Redusers/paginationReduser.ts","a1-root/common/Error/ErrorWindow.tsx","assets/image/loader.svg","a1-root/common/Preloader/Preloader.tsx","a1-root/common/Button/Button.tsx","a1-root/common/Modal/Modal.tsx","Redusers/WalletCryptoReduser.ts","Redusers/CoinCryptoReduser.ts","a1-root/v1-AllCrypto/TableList/TableList.tsx","a1-root/common/Headings/H2.tsx","a1-root/v1-AllCrypto/AllCrypto.tsx","a1-root/v4-Chart/Chart.tsx","a1-root/v2-CoinCrypto/TableCoinList/TableCoinList.tsx","a1-root/v2-CoinCrypto/CoinCrypto.tsx","assets/icon/UserSVG.tsx","assets/icon/WalletSVG.tsx","a1-root/Header/Header.tsx","a1-root/common/InputField/InputField.tsx","a1-root/v3-Wallet/InputForWalet.tsx","a1-root/v3-Wallet/TableWalletList/TableWalletList.tsx","a1-root/v3-Wallet/Wallet.tsx","App/App.tsx","reportWebVitals.ts","App/store.ts","App/localstorage-utils.ts","index.tsx","a1-root/v1-AllCrypto/AllCrypto.module.scss","a1-root/common/Button/Button.module.scss","a1-root/common/Modal/Modal.module.scss","a1-root/common/InputField/InputField.module.scss","a1-root/v3-Wallet/TableWalletList/TableWalletList.module.scss","a1-root/common/Error/Error.module.scss"],"names":["module","exports","instance","axios","create","baseURL","cryptoAPI","num","currentPage","get","id","arrCoin","stringFetch","forEach","i","index","idCoin","interval","initialState","allCoin","mainCoins","threeMainCoins","error","errorMainCoins","loader","actionsMainCrypto","data","type","DOTS","range","start","end","length","Array","from","_","idx","Pagination","totalCount","pageSize","siblingCount","setPackPage","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","className","classnames","paginationContainer","paginationItem","disabled","onClick","arrow","left","map","pageNumber","dots","nanoid","selected","right","PaginationWrapper","cardPacksTotalCount","pageCount","setPackPageCount","style","paginationWrapperContainer","paginationSelectContainer","paginationSpan","defaultValue","pagginationSelect","onChange","e","currentTarget","value","page","pageTotalCount","actionsForPagination","pack","ErrorWindow","errorMessage","errorClassName","error_block__visible","error_block__hidden","error_icon","error_message","Preloader","React","memo","isFetching","src","preloader","alt","overlay","Button","color","children","rounded","width","restProps","widthBtn","finalClassName","s","button","button__rounded","button__default","button__blue","button__light_blue","button__red","Modal","modalActive","setModalActive","modal","modal__active","modal__content","modal__content_active","stopPropagation","coinInWallet","startCoastUSD","difference","differencePercent","actionsWaletCrypto","name","symbol","priceUsd","sum","getCurrentCost","dispatch","getState","a","coins","wallet","startCoinCoast","coinsNameinWallet","push","res","newCoins","sumWallet","deltaPersent","message","oneMainCoin","coin","history","actionsCoinCrypto","TableList","useDispatch","allCoins","useSelector","state","allCrypto","useState","addModal","setAddModal","table","table__block","col1","col2","col3","col4","col5","col6","c","rank","toFixed","cursor","changePercent24Hr","btn","sumbol","to","H2","subtitle","AllCrypto","pagination","coinCrypto","needlyPage","setNeedlyPage","useEffect","int","setTimeout","clearTimeout","porcion","console","dir","getAllCoin","container","wrapper","Label","Component","Chart","arr","Date","time","LineChart","height","margin","top","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","offset","position","YAxis","Tooltip","Legend","Line","stroke","activeDot","r","TableCoinList","oneCoins","table__blockCoin","CoinCrypto","idLocation","res2","chart","UserSvg","version","baseProfile","xmlns","x","y","viewBox","d","WalletSvg","Header","startCoast","getDifference","getMainCoin","hendleRefresh","useCallback","header","header__container","header__nav","header__list","activeClassName","activeLink","header2__list","InputField","onChangeText","onKeyPress","onEnter","spanClassName","label","finalSpanClassName","finalInputClassName","input","input__error","inputField","aria-required","key","inputField__error","InputForWalet","props","changeSpan","setChangeSpan","coinValue","setCoinValue","errors","setErrors","disButton","setDisButton","borderBottom","onBlur","test","validate","handleSubmit","TableWalletList","handleDelete","Wallet","reMathWallet","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","init","log","filter","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","ReactDOM","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,aAAe,gCAAgC,aAAe,gCAAgC,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,iBAAmB,sC,oBCA9VD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,QAAU,6B,oBCAvED,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,SAAW,6B,yCCA7DD,EAAOC,QAAU,CAAC,2BAA6B,+CAA+C,oBAAsB,wCAAwC,eAAiB,mCAAmC,KAAO,yBAAyB,SAAW,6BAA6B,MAAQ,0BAA0B,KAAO,yBAAyB,MAAQ,0BAA0B,SAAW,6BAA6B,0BAA4B,8CAA8C,eAAiB,mCAAmC,kBAAoB,wC,mBCAtjBD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,kBAAoB,kCAAkC,aAAe,6BAA6B,WAAa,2BAA2B,cAAgB,gC,uJCC/LC,E,OAAWC,EAAMC,OAAO,CACjCC,QAAS,sCAIAC,EAAY,SACZC,EAAaC,GAClB,OAAON,EAASO,IAAT,iBAAgDF,EAAhD,mBAA8DC,GAAe,KAF/EF,EAAY,SAIXI,GACN,OAAOR,EAASO,IAAT,UAAkCC,GAAM,KAL1CJ,EAAY,SAONK,GACX,IAAIC,EAAc,GAQlB,OAPAD,EAAQE,SAAQ,SAACC,EAAGC,GACJ,GAATA,EACCH,EAAW,eAAWE,GAEtBF,GAAW,WAAQE,MAGpBZ,EAASO,IAA6BG,EAAa,KAhBrDN,EAAY,SAkBHU,GAAwC,IAAxBC,EAAuB,uDAAN,KAC/C,OAAOf,EAASO,IAAT,UAAgDO,EAAhD,6BAA2EC,GAAY,KCrBhGC,EAAe,CACjBC,QAAS,GACTC,UAAW,GACXC,eAAgB,CAAC,UAAW,WAAY,UACxCC,MAAO,KACPC,eAAgB,KAChBC,OAAQ,MAuBCC,EACK,SAACC,GAAD,MAA4B,CAACC,KAAM,kBAAmBD,SAD3DD,EAEK,SAACC,GAAD,MAA4B,CAACC,KAAM,iBAAkBD,SAF1DD,EAGC,SAACH,GAAD,MAA2B,CAACK,KAAM,aAAcL,UAHjDG,EAIU,SAACH,GAAD,MAA2B,CAACK,KAAM,wBAAyBL,UAJrEG,EAKE,SAACD,GAAD,MAA2B,CAACG,KAAM,cAAeH,W,yBC9BnDI,EAAO,GAEdC,EAAQ,SAACC,EAAeC,GAC1B,IAAIC,EAASD,EAAMD,EAAQ,EAC3B,OAAOG,MAAMC,KAAK,CAAEF,WAAU,SAACG,EAAGC,GAAJ,OAAYA,EAAMN,M,eCCvCO,EAAa,SAAC,GAMuB,IALnB7B,EAKkB,EALlBA,YACA8B,EAIkB,EAJlBA,WACAC,EAGkB,EAHlBA,SACAC,EAEkB,EAFlBA,aACAC,EACkB,EADlBA,YAIrBC,EDPmB,SAAC,GAK0B,IAJtBlC,EAIqB,EAJrBA,YACA8B,EAGqB,EAHrBA,WACAE,EAEqB,EAFrBA,aACAD,EACqB,EADrBA,SAmE9B,OAjEwBI,mBAAQ,WAC5B,IAAMC,EAAiBC,KAAKC,KAAKR,EAAaC,GAU9C,GAPyBC,EAAe,GAOhBI,EACpB,OAAOf,EAAM,EAAGe,GAMpB,IAAMG,EAAmBF,KAAKG,IAAIxC,EAAcgC,EAAc,GACxDS,EAAoBJ,KAAKK,IAC3B1C,EAAcgC,EACdI,GAMEO,EAAqBJ,EAAmB,EACxCK,EAAsBH,EAAoBL,EAAiB,EAE3DS,EAAiB,EACjBC,EAAgBV,EAKtB,IAAKO,GAAsBC,EAAqB,CAC5C,IACIG,EAAY1B,EAAM,EADF,EAAI,EAAIW,GAG5B,MAAM,GAAN,mBAAWe,GAAX,CAAsB3B,EAAMgB,IAMhC,GAAIO,IAAuBC,EAAqB,CAE5C,IACII,EAAa3B,EACbe,GAFiB,EAAI,EAAIJ,GAES,EAClCI,GAEJ,MAAM,CAAES,EAAgBzB,GAAxB,mBAAiC4B,IAMrC,GAAIL,GAAsBC,EAAqB,CAC3C,IAAIK,EAAc5B,EAAMkB,EAAkBE,GAC1C,MAAM,CAAEI,EAAgBzB,GAAxB,mBAAiC6B,GAAjC,CAA8C7B,EAAM0B,OAEzD,CAAChB,EAAYC,EAAUC,EAAchC,IC9DhBkD,CAAc,CAClClD,cACA8B,aACAE,eACAD,aAKJ,GAAIG,IACoB,IAAhBlC,GAAqBkC,EAAgBV,OAAS,GAC9C,OAAO,KAKf,IAUI2B,EAAWjB,EAAgBA,EAAgBV,OAAS,GAGxD,OACI,qBACI4B,UAAWC,IAAWC,oBAD1B,UAII,oBACIF,UAAS,UAAKC,IAAWE,eAAhB,YAAkD,IAAhBvD,GAAqBqD,IAAWG,UAC3EC,QAhBO,WACfxB,EAAYjC,EAAc,IAatB,SAII,qBAAKoD,UAAS,UAAKC,IAAWK,MAAhB,YAAyBL,IAAWM,UAErDzB,GAAmBA,EAAgB0B,KAAI,SAAAC,GAGpC,OAAIA,IAAezC,EACR,oBAEHgC,UAAS,UAAKC,IAAWE,eAAhB,YAAkCF,IAAWS,MAFnD,mBACEC,eAMT,oBAEIX,UAAS,UAAKC,IAAWE,eAAhB,YAAkCM,IAAe7D,GAAeqD,IAAWW,UACpFP,QAAS,kBACLxB,GAAa4B,IAJrB,SAOKA,GANIE,kBAWjB,oBAEIX,UAAS,UAAKC,IAAWE,eAAhB,YAAkCvD,IAAgBmD,GAAYE,IAAWG,UAClFC,QAlDG,WACXxB,EAAYjC,EAAc,IA8CtB,SAKI,qBAAKoD,UAAS,UAAKC,IAAWK,MAAhB,YAAyBL,IAAWY,eC9ErDC,EAA6C,SAAC,GAMO,IALHC,EAKE,EALFA,oBACAnE,EAIE,EAJFA,YACAoE,EAGE,EAHFA,UACAC,EAEE,EAFFA,iBACApC,EACE,EADFA,YAI3D,OACI,sBAAKmB,UAAWkB,IAAMC,2BAAtB,UAEI,cAAC,EAAD,CACInB,UAAW,GACXpD,YAAaA,EACb8B,WAAYqC,EACZpC,SAAUqC,EACVpC,aAAc,EACdC,YAAaA,IAEjB,sBAAKmB,UAAWkB,IAAME,0BAAtB,UACI,sBAAMpB,UAAWkB,IAAMG,eAAvB,kBACA,yBACIC,aAAcN,EACdhB,UAAWkB,IAAMK,kBACjBC,SAAU,SAACC,GAAD,OACVR,GAAkBQ,EAAEC,cAAcC,QAJtC,UAMI,wBAASA,MAAO,EAAhB,eACA,wBAAUA,MAAO,EAAjB,eACA,wBAAUA,MAAO,GAAjB,mBAEJ,sBAAM3B,UAAWkB,IAAMG,eAAvB,mCC3CV/D,EAAe,CACjB0D,UAAW,EACXY,KAAM,EACNC,eAAgB,KAiBPC,EACA,SAACC,GAAD,MAAmB,CACxBhE,KAAM,sBACNgE,SAHKD,EAKK,SAACC,GAAD,MAAmB,CAC7BhE,KAAM,4BACNgE,S,iBCtBKC,EAAwC,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAC/CC,EAAiBD,EAAef,IAAMiB,qBAAuBjB,IAAMkB,oBAEvE,OACI,sBAAKpC,UAAWkC,EAAhB,UACI,sBAAMlC,UAAWkB,IAAMmB,WAAvB,eACA,sBAAMrC,UAAWkB,IAAMoB,cAAvB,SAAuCL,GAA8B,W,kBCblE,MAA0B,mCCK5BM,EAAYC,IAAMC,MAAK,WAEhC,OACI,mCACI,sBAAKzC,UAAWkB,IAAMwB,WAAtB,UACI,qBAAKC,IAAKC,EAAWC,IAAK,oBAC1B,qBAAK7C,UAAWkB,IAAM4B,kB,mDCCzBC,EAAyC,SAAC,GASjD,IAPEC,EAOH,EAPGA,MAEAC,GAKH,EANGjD,UAMH,EALGiD,UACAC,EAIH,EAJGA,QACAC,EAGH,EAHGA,MACGC,EAEN,kEAEKC,EAAW,CACbF,MAAOA,GAGLG,EAAc,WAAOC,IAAEC,OAAT,YAAmBN,EAAUK,IAAEE,gBAAkBF,IAAEG,gBAAnD,kBACR,cAAVV,EAAwBO,IAAEI,aAAyB,eAAVX,EAAyBO,IAAEK,mBAAqBL,IAAEM,aAE7F,OACI,gDACI7D,UAAWsD,EACXpC,MAAOmC,GACHD,GAHR,aAKI,+BAAOH,Q,iBC3BNa,GAAkC,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,eAAgBf,EAAc,EAAdA,SAE3E,OACG,qBAAKjD,UAAW+D,EAAW,UAAMR,IAAEU,MAAR,YAAiBV,IAAEW,eAAkBX,IAAEU,MAAO5D,QAAS,kBAAM2D,GAAe,IAAvG,SACG,qBAAKhE,UAAW+D,EAAW,UAAMR,IAAEY,eAAR,YAA0BZ,IAAEa,uBAA0Bb,IAAEY,eAC9E9D,QAAS,SAACoB,GAAD,OAAOA,EAAE4C,mBADvB,SAEIpB,OCRP3F,GAAe,CACjBgH,aAAc,GACdC,cAAe,EACfC,WAAY,EACZC,kBAAmB,EACnB/G,MAAO,MA6EEgH,GACA,SAACC,EAAcC,EAAgBC,GAA/B,MAAqD,CAC1D9G,KAAM,kBACN4G,OACAC,SACAC,aALKH,GAOA,SAACI,EAAahI,GAAd,MAA8B,CAACiB,KAAM,kBAAmB+G,MAAKhI,OAP7D4H,GAQG,SAAC5H,GAAD,MAAiB,CAACiB,KAAM,qBAAsBjB,OARjD4H,GASS,SAAC/H,GAAD,MAAkB,CAACoB,KAAM,yBAA0BpB,QAT5D+H,GAUM,SAAC/H,GAAD,MAAkB,CAACoB,KAAM,wBAAyBpB,QAVxD+H,GAWa,SAAC/H,GAAD,MAAkB,CAACoB,KAAM,gCAAiCpB,QAXvE+H,GAYC,SAAChH,GAAD,MAA2B,CAACK,KAAM,eAAgBL,UAiBnDqH,GAAiB,yDAAM,WAAOC,EAAyBC,GAAhC,6BAAAC,EAAA,kEAIP,KADjBC,EAAQF,IAAWG,OAAOd,cACpBlG,OAJkB,gBAKxB4G,EAASN,GAAiC,IAC1CM,EAASN,GAAwC,IANzB,8BASpBW,EAAiBJ,IAAWG,OAAOb,cACnCe,EAAmC,GACvCH,EAAMlI,SAAQ,SAACC,GACXoI,EAAkBC,KAAKrI,EAAEyH,SAE7BK,EAASnH,GAA4B,IAdb,UAeRnB,EAAyB4I,GAfjB,QAepBE,EAfoB,OAgBxBR,EAASN,GAA4B,OACjCe,EAAWD,EAAI1H,KAAKA,KACpB4H,EAAY,EACZxI,EAAI,EACR,GACIwI,IAAcD,EAASvI,GAAG2H,UAAYM,EAAMjI,GAAG4H,IAC/C5H,UACKA,EAAIuI,EAASrH,QAElBuH,GAAiBN,EAAiBK,GAAaL,EAAkB,IACrEL,EAASN,GAFGW,EAAiBK,IAG7BV,EAASN,GAAwCiB,IA3BzB,0DA8B5BX,EAASN,GAA4B,KAAEkB,UA9BX,yBAgC5BZ,EAASnH,GAA4B,IAhCT,6EAAN,yDChHxBP,GAAe,CACjBuI,YAAa,GACbC,KAAM,KACNC,QAAS,KACTrI,MAAO,MAqBEsI,GACO,SAAClI,GAAD,MAAmB,CAACC,KAAM,qBAAsBD,SADvDkI,GAEG,SAAClI,GAAD,MAAqB,CAACC,KAAM,WAAYD,SAF3CkI,GAGO,SAACD,GAAD,MAAsC,CAAChI,KAAM,oBAAqBgI,YAHzEC,GAIC,SAACtI,GAAD,MAA2B,CAACK,KAAM,aAAcL,UCrBjDuI,GAAsB,WAE/B,IAAMjB,EAAWkB,cAEbC,EAAWC,aAA+C,SAAAC,GAAK,OAAIA,EAAMC,UAAU/I,WAJlD,EAKLgJ,oBAAS,GALJ,mBAK9BC,EAL8B,KAKpBC,EALoB,KAerC,OACI,sBAAKzG,UAAWuD,IAAEmD,MAAlB,UACI,wBAAO1G,UAAWuD,IAAEoD,aAApB,UACI,gCACA,+BACI,oBAAI3G,UAAWuD,IAAEqD,KAAjB,kBACA,oBAAI5G,UAAWuD,IAAEsD,KAAjB,kBACA,oBAAI7G,UAAWuD,IAAEuD,KAAjB,yBACA,oBAAI9G,UAAWuD,IAAEwD,KAAjB,iCACA,oBAAI/G,UAAWuD,IAAEyD,KAAjB,oBACA,oBAAIhH,UAAWuD,IAAE0D,KAAjB,0BAGJ,gCACCd,EAAS3F,KAAI,SAAC0G,GACX,OAAO,+BACH,oBAAIlH,UAAWuD,IAAEqD,KAAjB,WAA0BM,EAAEC,MAAMC,QAAQ,KAC1C,oBAAIpH,UAAWuD,IAAEsD,KAAM3F,MAAO,CAC1BmG,OAAQ,WAERhH,QAAS,kBA5BRvD,EA4B8BoK,EAAEpK,QA3BrDkI,EAASgB,GAAiClJ,IADtB,IAACA,GAyBL,SAG2CoK,EAAEvC,OAC7C,oBAAI3E,UAAWuD,IAAEuD,KAAjB,WAA0BI,EAAErC,UAAUuC,QAAQ,KAC9C,oBAAIpH,UAAWuD,IAAEwD,KAAjB,WAA0BG,EAAEI,mBAAmBF,QAAQ,KACvD,oBAAIpH,UAAWuD,IAAEyD,KAAjB,SAAwBE,EAAEtC,SAC1B,oBAAI5E,UAAS,UAAKuD,IAAE0D,KAAP,YAAe1D,IAAEgE,KAA9B,SACI,cAAC,EAAD,CACIlH,QAAS,WA9Bf,IAACsE,EAAc6C,EAAgB3C,EA+BrB4B,GAAY,GA/BrB9B,EAgCuBuC,EAAEpK,GAhCX0K,EAgCeN,EAAEtC,OAhCDC,EAgCSqC,EAAErC,SA/B5DG,EAASN,GAA2BC,EAAM6C,EAAQ3C,KAiC1B3B,SAAS,EACTF,MAAM,aANV,+BAVQrC,uBAyBxB,eAAC,GAAD,CAAOoD,YAAayC,EAAUxC,eAAgByC,EAA9C,oFAEuB,cAAC,IAAD,CAAMgB,GAAG,iBAAT,oBAFvB,sB,yCClECC,GAAe,SAAC,GAAgB,IAAfzE,EAAc,EAAdA,SAC3B,OAAO,oBAAIjD,UAAWuD,KAAEoE,SAAjB,SAA4B1E,KCwEvB2E,GA/DGpF,IAAMC,MAAK,WACzB,IAAMuC,EAAWkB,cAEbtI,EAASwI,aAA8C,SAAAC,GAAK,OAAIA,EAAMC,UAAU1I,UAC9EiE,EAAiBuE,aAAsC,SAAAC,GAAK,OAAIA,EAAMwB,WAAWhG,kBACjFjF,EAAcwJ,aAAsC,SAAAC,GAAK,OAAIA,EAAMwB,WAAWjG,QAC9EZ,EAAYoF,aAAsC,SAAAC,GAAK,OAAIA,EAAMwB,WAAW7G,aAC5EtD,EAAQ0I,aAA6C,SAAAC,GAAK,OAAIA,EAAMC,UAAU5I,SAC9EmI,EAAcO,aAAsC,SAAAC,GAAK,OAAIA,EAAMyB,WAAWjC,eARrD,EAgBKU,mBAAS,GAhBd,mBAgBxBwB,EAhBwB,KAgBZC,EAhBY,KAiC/B,OAXAC,qBAAU,WACN,IAAIC,EAAMC,YAAW,WACjBnD,EAASnH,EAA2B,SACrC,KACH,OAAO,kBAAMuK,aAAaF,MAC3B,CAACxK,IAEJuK,qBAAU,WACNjD,EdekB,SAACqD,EAAiBzL,GAAlB,8CAA0C,WAAOoI,GAAP,eAAAE,EAAA,sEAE5DF,EAASnH,GAA4B,IAFuB,SAG5CnB,EAAmB2L,EAASzL,GAHgB,OAGxD4I,EAHwD,OAI5DR,EAASnH,EAA+B2H,EAAI1H,KAAKA,OACjDkH,EAASnH,EAA2B,OALwB,gDAO5DyK,QAAQC,IAAR,MACAvD,EAASnH,EAA2B,KAAE+H,UARsB,yBAU5DZ,EAASnH,GAA4B,IAVuB,4EAA1C,sDcfT2K,CAAWxH,EAAW+G,MAChC,CAAC/G,EAAW+G,IAEXnK,EACO,cAAC2E,EAAD,IAGS,KAAhBsD,EACO,cAAC,IAAD,CAAU4B,GAAI,iBAMrB,sBAAKzH,UAAWuD,KAAEkF,UAAlB,UACI,cAAC,GAAD,wBACA,sBAAKzI,UAAWuD,KAAEmF,QAAlB,UAEI,cAAC,GAAD,IAEChL,GAAS,cAAC,EAAD,CAAauE,aAAcvE,IACrC,cAAC,EAAD,CACIqD,oBAAqBc,EACrBjF,YAAaA,EACboE,UAAWA,EACXC,iBA5CK,SAACW,GAClBoD,EAASlD,EAAkCF,KA4C/B/C,YAvCA,SAAC+C,GACboD,EAASlD,EAA6BF,IACtCoG,GAAepG,EAAO,GAAKZ,e,4GCzB7B2H,G,gKACF,WACI,OAAO,S,GAFKnG,IAAMoG,WAMbC,GAAQ,WACjB,IAAI9C,EAAUK,aAA6D,SAAAC,GAAK,OAAIA,EAAMyB,WAAW/B,WACjG+C,EAAW,GAMf,OALW/C,KACE9I,SAAQ,SAAAC,GACjB4L,EAAIvD,KAAK,CAACZ,KAAM,IAAIoE,KAAK7L,EAAE8L,MAAO3L,UAAWH,EAAE2H,cAI/C,eAACoE,GAAA,EAAD,CACI9F,MAAO,IACP+F,OAAQ,IACRpL,KAAMgL,EACNK,OAAQ,CACJC,IAAK,EACLvI,MAAO,GACPN,KAAM,GACN8I,OAAQ,GARhB,UAWI,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,GAAf,SACI,cAAC,GAAD,CAAO9H,MAAK,oBAAe,IAAIoH,KAAKD,EAAI,IAA5B,eAAsC,IAAIC,KAAKD,EAAIA,EAAI1K,OAAS,KAAOsL,OAAQ,EACpFC,SAAS,aAEpB,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAMpF,KAAK,QAAQ5G,KAAK,WAAW0L,QAAQ,WAAWO,OAAO,UAAUC,UAAW,CAACC,EAAG,SC7BrFC,GAA0B,WAEnC,IAAMnF,EAAWkB,cAFwB,EAITK,oBAAS,GAJA,mBAIlCC,EAJkC,KAIxBC,EAJwB,KAKrC2D,EAAWhE,aAA+C,SAAAC,GAAK,OAAIA,EAAMyB,WAAWhC,QAOxF,OACI,sBAAK9F,UAAWuD,IAAEmD,MAAlB,UACI,wBAAO1G,UAAWuD,IAAE8G,iBAApB,UACI,gCACA,+BACI,oBAAIrK,UAAWuD,IAAEqD,KAAjB,kBACA,oBAAI5G,UAAWuD,IAAEsD,KAAjB,kBACA,oBAAI7G,UAAWuD,IAAEuD,KAAjB,yBACA,oBAAI9G,UAAWuD,IAAEwD,KAAjB,iCACA,oBAAI/G,UAAWuD,IAAEyD,KAAjB,oBACA,oBAAIhH,UAAWuD,IAAE0D,KAAjB,0BAGJ,gCACCmD,GACD,+BACI,oBAAIpK,UAAWuD,IAAEqD,KAAjB,WAA0BwD,EAASjD,MAAMC,QAAQ,KACjD,oBAAIpH,UAAWuD,IAAEsD,KAAjB,SAAwBuD,EAASzF,OACjC,oBAAI3E,UAAWuD,IAAEuD,KAAjB,WAA0BsD,EAASvF,UAAUuC,QAAQ,KACrD,oBAAIpH,UAAWuD,IAAEwD,KAAjB,WAA0BqD,EAAS9C,mBAAmBF,QAAQ,KAC9D,oBAAIpH,UAAWuD,IAAEyD,KAAjB,SAAwBoD,EAASxF,SACjC,oBAAI5E,UAAS,UAAKuD,IAAE0D,KAAP,YAAe1D,IAAEgE,KAA9B,SACI,cAAC,EAAD,CACIlH,QAAS,WA3BX,IAACsE,EAAc6C,EAAgB3C,EA4BzB4B,GAAY,GACZ2D,IA7BLzF,EA6B+ByF,EAAStN,GA7B1B0K,EA6B8B4C,EAASxF,OA7BvBC,EA6B+BuF,EAASvF,SA5BzFG,EAASN,GAA2BC,EAAM6C,EAAQ3C,MA8B9B3B,SAAS,EACTF,MAAM,aANV,qCAeZ,eAAC,GAAD,CAAOe,YAAayC,EAAUxC,eAAgByC,EAA9C,oFAEuB,cAAC,IAAD,CAAMgB,GAAG,iBAAT,oBAFvB,sBCJG6C,GA5CI9H,IAAMC,MAAK,WAC1B,IAAMuC,EAAWkB,cAEXqE,EAAanE,aAAsC,SAAAC,GAAK,OAAIA,EAAMyB,WAAWjC,eAE7EnI,EAAQ0I,aAA6C,SAAAC,GAAK,OAAIA,EAAMyB,WAAWpK,SACjFE,EAASwI,aAA8C,SAAAC,GAAK,OAAIA,EAAMC,UAAU1I,UAcpF,OAXAqK,qBAAU,WACN,IAAIC,EAAMC,YAAW,WACjBnD,EAASgB,GAA2B,SACrC,KACH,OAAO,kBAAMoC,aAAaF,MAC3B,CAACxK,IAEJuK,qBAAU,WNYmB,IAACnL,EAAYoL,EMXlClD,GNWsBlI,EMXKyN,ENWN,uCAA8B,WAAOvF,GAAP,iBAAAE,EAAA,sEAEvDF,EAASnH,GAA4B,IAFkB,SAGvCnB,EAA4BI,EAAIoL,GAHO,cAGnD1C,EAHmD,OAIvDR,EAASgB,GAAiCR,EAAI1H,KAAKA,OAJI,SAKtCpB,EAAoBI,GALkB,OAKnD0N,EALmD,OAMvDxF,EAASgB,GAA6BwE,EAAK1M,KAAKA,OAChDkH,EAASgB,GAA2B,OAPmB,kDASvDhB,EAASgB,GAA2B,KAAEJ,UATiB,yBAWvDZ,EAASnH,GAA4B,IAXkB,6EAA9B,0DMVtB,CAAC0M,IAEJ3M,EACO,cAAC2E,EAAD,IAGQ,KAAfgI,EAEI,cAAC,IAAD,CAAU9C,GAAI,eAAd,wBAIJ,qBAAKzH,UAAWuD,KAAEkF,UAAlB,SACI,sBAAKzI,UAAWuD,KAAEmF,QAAlB,UACKhL,GAAS,cAAC,EAAD,CAAauE,aAAcvE,IACrC,cAAC,GAAD,UAAK6M,IACL,cAAC,GAAD,IACA,qBAAKvK,UAAWuD,KAAEkH,MAAlB,SACI,cAAC,GAAD,c,oBC9CPC,GAAoB,WAE7B,OAAO,qBAAKxJ,MAAO,CAACiC,MAAO,OAAQ+F,OAAQ,QAAQyB,QAAQ,MAAMC,YAAY,OAAO9N,GAAG,UAAU+N,MAAM,6BAC3FC,EAAE,MAAMC,EAAE,MAAMC,QAAQ,cAD7B,SAEH,sBAAMC,EAAE,u0BCJHC,GAAsB,WAE/B,OAAO,qBAAKhK,MAAO,CAACiC,MAAO,OAAQ+F,OAAQ,QAASyB,QAAQ,MAAM7N,GAAG,SAAS+N,MAAM,6BAA6BC,EAAE,MAAMC,EAAE,MAC/GC,QAAQ,oBADb,SAEH,4BACI,sBAAMC,EAAE,04BCuGLE,GA/FA3I,IAAMC,MAAK,WAElB,IAAMuC,EAAWkB,cACb1I,EAAY4I,aAA+C,SAAAC,GAAK,OAAIA,EAAMC,UAAU9I,aACpFT,EAAUqJ,aAA6C,SAAAC,GAAK,OAAIA,EAAMC,UAAU7I,kBAChF2N,EAAahF,aAAsC,SAAAC,GAAK,OAAIA,EAAMjB,OAAOb,iBACzE8G,EAAgBjF,aAAsC,SAAAC,GAAK,OAAIA,EAAMjB,OAAOZ,cAC5EC,EAAoB2B,aAAsC,SAAAC,GAAK,OAAIA,EAAMjB,OAAOX,qBAC9E/G,EAAQ0I,aAA6C,SAAAC,GAAK,OAAIA,EAAMjB,OAAO1H,SAC3EC,EAAiByI,aAA6C,SAAAC,GAAK,OAAIA,EAAMC,UAAU3I,kBACzFC,EAASwI,aAA8C,SAAAC,GAAK,OAAIA,EAAMC,UAAU1I,UAGpFqK,qBAAU,WACN,IAAIC,EAAMC,YAAW,WACjBxK,GAAkBqH,EAASnH,EAAoC,OAC/DH,GAASsH,EAASN,GAA4B,SAC/C,KACH,OAAO,kBAAM0D,aAAaF,MAC3B,CAACxK,EAAOC,IAEXsK,qBAAU,WACFjD,EpBKW,SACvBjI,GADuB,8CAEtB,WAAOiI,GAAP,eAAAE,EAAA,sEAEGF,EAASnH,GAA4B,IAFxC,SAGmBnB,EAAyBK,GAH5C,OAGOyI,EAHP,OAIGR,EAASnH,EAA+B2H,EAAI1H,KAAKA,OACjDkH,EAASnH,EAAoC,OALhD,gDAOGmH,EAASnH,EAAoC,KAAE+H,UAPlD,yBASGZ,EAASnH,GAA4B,IATxC,4EAFsB,sDoBLFyN,CAAYvO,MACtB,IAGP,IAAMwO,EAAgBC,uBAAY,WAC9BxG,EAASD,QACV,IAGH,OAAInH,EACO,cAAC2E,EAAD,IAKP,yBAAQvC,UAAWkB,KAAMuK,OAAzB,UACI,sBAAKzL,UAAWkB,KAAMwK,kBAAtB,UACI,sDACA,qBAAK1L,UAAWkB,KAAMyK,YAAtB,SACI,qBAAI3L,UAAWkB,KAAM0K,aAArB,UACI,6BACI,eAAC,IAAD,CACIvL,QAAS,WACL2E,EAASgB,GAAiC,MAE9CyB,GAAI,eAAgBoE,gBAAiB3K,KAAM4K,WAJ/C,UAKI,qBAAK5K,MAAO,CAAC8B,MAAO,OAApB,SAA4B,cAAC,GAAD,MALhC,YAQJ,6BACI,eAAC,IAAD,CACI3C,QAAS,WACL2E,EAASgB,GAAiC,MAE9CyB,GAAI,iBACJoE,gBAAiB3K,KAAM4K,WAL3B,UAKuC,cAAC,GAAD,IALvC,sBAYhB,qBAAK9L,UAAWkB,KAAMwK,kBAAtB,SACKlO,GAAaA,EAAUgD,KAAI,SAAAtD,GACxB,OAAO,qBAAI8C,UAAS,UAAKkB,KAAM4K,WAAX,YAAyB5K,KAAM6K,eAA5C,UACH,6BAAK7O,EAAEyH,OACP,+BAAOzH,EAAE2H,UAAUuC,QAAQ,KAC3B,6BAAKlK,EAAE0H,WAH8DjE,oBASjF,sBAAKX,UAAWkB,KAAMwK,kBAAtB,UACI,qBAAI1L,UAAS,UAAKkB,KAAM4K,WAAX,YAAyB5K,KAAM6K,eAA5C,UACI,qBAAI7K,MAAO,CAAC8B,MAAO,SAAnB,6BAA8CoI,EAAWhE,QAAQ,MACjE,qBAAIlG,MAAO,CAAC8B,MAAO,OAAnB,oBACYqI,EAAcjE,QAAQ,MAClC,qBAAIlG,MAAO,CAAC8B,MAAO,QAAnB,+BAA+CyB,EAAkB2C,QAAQ,GAAzE,WAEJ,cAAC,EAAD,CAAQjE,MAAO,GACPH,MAAM,MACNE,SAAO,EACP7C,QAASkL,EAHjB,wBAOH7N,GAAS,cAAC,EAAD,CAAauE,aAAcvE,IACpCC,GAAkB,cAAC,EAAD,CAAasE,aAActE,U,oBC5FjDqO,GAA6C,SAAC,GASrD,IAPExK,EAOH,EAPGA,SAAUyK,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZzO,EAKH,EALGA,MACW0O,GAId,EAJGpM,UAIH,EAJcoM,eACXC,EAGH,EAHGA,MACGjJ,EAEN,8GAeKkJ,EAAkB,UAAM/I,KAAE7F,MAAR,YAAiB0O,GAAgC,IACnEG,EAAmB,UAAMhJ,KAAEiJ,MAAR,YAAiB9O,GAAS6F,KAAEkJ,cAErD,OACI,qBAAIzM,UAAS,UAAKkB,IAAM2F,KAAX,YAAmBtD,KAAEmJ,YAAlC,UACI,uBAAOC,iBAAe,EAAtB,SAA6BN,IAC7B,mCACI7K,SArBa,SAACC,GACtBD,GACGA,EAASC,GAEZwK,GAAgBA,EAAaxK,EAAEC,cAAcC,QAkBrCuK,WAhBe,SAACzK,GACxByK,GAAcA,EAAWzK,GACzB0K,GACa,UAAV1K,EAAEmL,KACFT,KAaKnM,UAAWuM,GACPnJ,IAER,qBAAKpD,UAAWuD,KAAEsJ,kBAAlB,SACKnP,GAAS,sBAAMsC,UAAWsM,EAAjB,SAAsC5O,U,oBCoDjDoP,GAxFO,SAACC,GAA+B,IAG1CjQ,EAAmBiQ,EAAnBjQ,GAAIgI,EAAeiI,EAAfjI,IAAKF,EAAUmI,EAAVnI,OACXI,EAAWkB,cAJgC,EAKbK,oBAAkB,GALL,mBAK1CyG,EAL0C,KAK9BC,EAL8B,OAMf1G,mBAAczB,GANC,mBAM1CoI,EAN0C,KAM/BC,EAN+B,OAiBrB5G,mBAAS,IAjBY,mBAiB1C6G,EAjB0C,KAiBlCC,EAjBkC,OAkBf9G,oBAAS,GAlBM,mBAkB1C+G,EAlB0C,KAkB/BC,EAlB+B,KAsCjD,OACI,mCAEKP,EAAa,qCACN,oBAAIhN,UAAWuD,KAAEsD,KAAjB,SACG,sBAAM3F,MAAO,CAETgI,OAAQ,OACRsE,aAAc,iBAHlB,SAII1I,MAEP,oBAAI9E,UAAWuD,KAAEuD,KAAjB,SACKlC,IAEL,oBAAI5E,UAAWuD,KAAEwD,KAAjB,SACI,cAAC,EAAD,CACI5D,MAAO,GACPH,MAAM,aACNE,SAAO,EACP7C,QA7CL,WACf4M,GAAc,IAwCE,uBAQR,qCACI,cAAC,GAAD,CACIZ,MAAO,OACPtO,KAAM,OACN4D,MAAOuL,EACPO,OAAQ,SAAAhM,GAAC,OA7CZ,SAACA,GACTA,EAAEC,cAAcC,MAGV,KAAK+L,KAAKjM,EAAEC,cAAcC,QACjC0L,EAAU,mBACVE,GAAa,IACL,gDAAgDG,KAAKjM,EAAEC,cAAcC,OAM7E4L,GAAa,IALbJ,EAAarI,GACbuI,EAAU,iBACVE,GAAa,KARbF,EAAU,mBACVE,GAAa,IA0CYI,CAASlM,IACtBD,SAAU,SAAAC,GAAC,OAAI0L,EAAa1L,EAAEC,cAAcC,QAC5CjE,MAAkB,KAAX0P,EAAgBA,EAAS,OAEpC,oBAAIpN,UAAWuD,KAAEuD,KAAjB,SACKlC,IAEL,oBAAI5E,UAAWuD,KAAEwD,KAAjB,SACI,cAAC,EAAD,CACI5D,MAAO,GACPH,MAAM,aACNE,SAAO,EACP9C,SAAUkN,EACVjN,QAAS,kBAvEZ,SAACsB,EAAe7E,GACjCkI,EAASN,GAA2B/C,EAAO7E,IAC3CmQ,GAAc,GAqEqBW,CAAaV,EAAWpQ,IAL3C,0BC3EX+Q,GAA4B,WAErC,IAAM7I,EAAWkB,cAEbf,EAAQiB,aAAuD,SAAAC,GAAK,OAAIA,EAAMjB,OAAOd,gBACrF1G,EAASwI,aAA8C,SAAAC,GAAK,OAAIA,EAAMC,UAAU1I,UAG9EkQ,EAAetC,uBACjB,SAAC1O,GACGkI,EAASN,GAA8B5H,MAEzC,IAEN,OAAIc,EACO,cAAC2E,EAAD,IAIP,qBAAKvC,UAAWuD,IAAEmD,MAAlB,SACI,wBAAO1G,UAAWuD,IAAEoD,aAApB,UACI,gCACA,+BACI,oBAAI3G,UAAWuD,IAAEqD,KAAjB,kBACA,oBAAI5G,UAAWuD,IAAEsD,KAAjB,mBACA,oBAAI7G,UAAWuD,IAAEuD,KAAjB,oBACA,oBAAI9G,UAAWuD,IAAEwD,KAAjB,kBACA,oBAAI/G,UAAWuD,IAAEyD,KAAjB,yBAGJ,gCACC7B,EAAM3E,KAAI,SAACtD,GACR,OAAO,+BACH,oBAAI8C,UAAWuD,IAAEqD,KAAjB,SAAwB1J,EAAEyH,OAE1B,cAAC,GAAD,CACIA,KAAMzH,EAAEyH,KACR7H,GAAII,EAAEJ,GACNgI,IAAK5H,EAAE4H,IACPF,OAAQ1H,EAAE0H,SAEd,oBAAI5E,UAAS,UAAKuD,IAAEyD,KAAP,YAAezD,IAAEgE,KAA9B,SACI,cAAC,EAAD,CACIpE,MAAO,GACPH,MAAM,MACNE,SAAO,EACP7C,QAAS,kBAAMyN,EAAa5Q,EAAEJ,KAJlC,wBAVQ6D,0BCGrBoN,GApCAvL,IAAMC,MAAK,WAEtB,IAAMuC,EAAWkB,cACbtI,EAASwI,aAA8C,SAAAC,GAAK,OAAIA,EAAMC,UAAU1I,UAE9EgQ,EAAepC,uBAAY,WACzBxG,GdsFgC,SAACA,EAAyBC,GAClE,IAAIE,EAAQF,IAAWG,OAAOd,aAQ9BU,EAASN,GAPY,WACjB,IAAIgB,EAAY,EAIhB,OAHAP,EAAMlI,SAAQ,SAACC,GACXwI,IAAcxI,EAAE2H,UAAY3H,EAAE4H,OAE3BY,EAEkCsI,Qc9FrChJ,EAASD,QAEX,IAGN,OAAInH,EACO,cAAC2E,EAAD,IAGP,sBAAKvC,UAAWuD,KAAEkF,UAAlB,UACI,cAAC,GAAD,wBAEA,qBAAKzI,UAAWuD,KAAEmF,QAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,EAAD,CACIxH,MAAO,CACHiC,MAAO,OACPgG,OAAQ,UAEZnG,MAAO,YACP3C,QAASuN,EACT1K,SAAO,EAPX,0BCXG+K,OAhBf,WAEI,OACI,qCACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAM,cAAC,GAAD,OACtC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,eAAgBC,OAAQ,kBAAM,cAAC,GAAD,OACjD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,eAAgBC,OAAQ,kBAAM,cAAC,GAAD,OACjD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,iBAAkBC,OAAQ,kBAAM,cAAC,GAAD,OACnD,cAAC,IAAD,CAAOD,KAAM,IAAKC,OAAQ,kBAAM,+DCJjCC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oBCARQ,GAAcC,aAAgB,CAChCzI,U3BKA,WAA+F,IAA9FD,EAA6F,uDAAnE/I,EAAc0R,EAAqD,uCAC1F,OAAQA,EAAOjR,MACX,IAAK,kBACD,OAAO,2BAAIsI,GAAX,IAAkB9I,QAASyR,EAAOlR,OACtC,IAAK,iBACD,OAAO,2BAAIuI,GAAX,IAAkB7I,UAAWwR,EAAOlR,OACxC,IAAK,aACD,OAAO,2BAAIuI,GAAX,IAAkB3I,MAAOsR,EAAOtR,QACpC,IAAK,wBACD,OAAO,2BAAI2I,GAAX,IAAkB1I,eAAgBqR,EAAOtR,QAC7C,IAAK,cACD,OAAO,2BAAI2I,GAAX,IAAkBzI,OAAQoR,EAAOpR,SACrC,QACI,OAAOyI,I2BjBnByB,WhBGA,WAA+F,IAA9FzB,EAA6F,uDAAnE/I,GAAc0R,EAAqD,uCAC1F,OAAQA,EAAOjR,MACX,IAAK,qBACD,OAAO,2BAAIsI,GAAX,IAAkBR,YAAamJ,EAAOlR,OAC1C,IAAK,WACD,OAAO,2BAAIuI,GAAX,IAAkBP,KAAMkJ,EAAOlR,OACnC,IAAK,oBACD,OAAO,2BAAIuI,GAAX,IAAkBN,QAASiJ,EAAOjJ,UACtC,IAAK,aACD,OAAO,2BAAIM,GAAX,IAAkB3I,MAAOsR,EAAOtR,QACpC,QACI,OAAO2I,IgBbnBjB,OjBIA,WAA2G,IAA1GiB,EAAyG,uDAAzE/I,GAAc0R,EAA2D,uCACtG,OAAQA,EAAOjR,MACX,IAAK,kBACD,IAAIkR,EAAO5I,EAAM/B,aAEjB,OADAgE,QAAQ4G,IAAID,GACQ,IAAhBA,EAAK7Q,QAekD,IAAnD6Q,EAAKE,QAAO,SAAAjS,GAAC,OAAIA,EAAEyH,MAAQqK,EAAOrK,QAAMvG,OAdrC,2BACAiI,GADP,IAEI/B,aAAa,GAAD,mBACL+B,EAAM/B,cADD,CAER,CACIxH,GAAI6D,cACJmE,IAAK,EACLH,KAAMqK,EAAOrK,KACbC,OAAQoK,EAAOpK,OACfC,SAAUmK,EAAOnK,cAoBlBwB,EAGnB,IAAK,kBACD,OAAO,2BACAA,GADP,IAEI/B,aAAc+B,EAAM/B,aAAa9D,KAAI,SAAAtD,GAAC,OAAIA,EAAEJ,KAAOkS,EAAOlS,GAAhB,2BAAyBI,GAAzB,IAA4B4H,IAAKkK,EAAOlK,MAAO5H,OAEjG,IAAK,qBACD,OAAO,2BACAmJ,GADP,IAEI/B,aAAc+B,EAAM/B,aAAa6K,QAAO,SAAAjS,GAAC,OAAIA,EAAEJ,KAAOkS,EAAOlS,QAErE,IAAK,yBACD,OAAO,2BAEAuJ,GAFP,IAGI9B,cAAeyK,EAAOrS,MAE9B,IAAK,wBACD,OAAO,2BACA0J,GADP,IAEI7B,WAAYwK,EAAOrS,MAE3B,IAAK,gCACD,OAAO,2BACA0J,GADP,IAEI5B,kBAAmBuK,EAAOrS,MAElC,IAAK,eACD,OAAO,2BAAI0J,GAAX,IAAkB3I,MAAOsR,EAAOtR,QACpC,QACI,OAAO2I,IiBtEnBwB,WvBJA,WAA+F,IAA9FxB,EAA6F,uDAAnE/I,EAAc0R,EAAqD,uCAC1F,OAAQA,EAAOjR,MACX,IAAK,sBACD,OAAO,2BAAIsI,GAAX,IAAkBzE,KAAMoN,EAAOjN,OACnC,IAAK,4BACD,OAAO,2BAAIsE,GAAX,IAAkBrF,UAAWgO,EAAOjN,OACxC,QACI,OAAOsE,MuBDV+I,GAAQC,aAAYP,GCZR,WACrB,IACI,IAAMQ,EAAkBC,aAAaC,QAAQ,eAC7C,GAAwB,OAApBF,EACA,OAEJ,OAAOG,KAAKC,MAAMJ,GACpB,MAAOK,GACL,QDIqCC,GAAaC,aAAgBC,OAE1EV,GAAMW,WAAU,YCDS,SAAC1J,GACtB,IACI,IAAMiJ,EAAkBG,KAAKO,UAAU3J,GACvCkJ,aAAaU,QAAQ,cAAeX,GACtC,WDFFY,CAAU,CACN9K,OAAQgK,GAAMnK,WAAWG,YEVjC+K,IAAS/B,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUgB,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRgB,SAASC,eAAe,SAG5BhC,M,mBCjBAjS,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,MAAQ,2B,mBCAxGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAkB,gCAAgC,gBAAkB,gCAAgC,aAAe,6BAA6B,mBAAqB,mCAAmC,YAAc,8B,mBCAxQD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,cAAgB,6BAA6B,eAAiB,8BAA8B,sBAAwB,uC,mBCAnKD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,kBAAoB,sCAAsC,MAAQ,0BAA0B,aAAe,mC,mBCAzKD,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,aAAe,sCAAsC,aAAe,sCAAsC,KAAO,8BAA8B,KAAO,8BAA8B,KAAO,8BAA8B,KAAO,8BAA8B,KAAO,8BAA8B,KAAO,8BAA8B,iBAAmB,4C,mBCApZD,EAAOC,QAAU,CAAC,qBAAuB,oCAAoC,WAAa,0BAA0B,oBAAsB,mCAAmC,WAAa,0BAA0B,cAAgB,gC","file":"static/js/main.1c098981.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableList_table__2S6uz\",\"table__block\":\"TableList_table__block__RpYvw\",\"table__modal\":\"TableList_table__modal__22_yt\",\"col1\":\"TableList_col1__2BP1D\",\"col2\":\"TableList_col2__1JgUs\",\"col3\":\"TableList_col3__tyS4A\",\"col4\":\"TableList_col4__3JQkE\",\"col5\":\"TableList_col5__3jJEC\",\"col6\":\"TableList_col6__1T71h\",\"table__blockCoin\":\"TableList_table__blockCoin__3rjeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isFetching\":\"Preloader_isFetching__1YnSQ\",\"overlay\":\"Preloader_overlay__aas09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Headings_title__YiEEf\",\"subtitle\":\"Headings_subtitle__3PmS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationWrapperContainer\":\"Pagination_paginationWrapperContainer__1M7j2\",\"paginationContainer\":\"Pagination_paginationContainer__2U9GD\",\"paginationItem\":\"Pagination_paginationItem__2XWnZ\",\"dots\":\"Pagination_dots__24Lax\",\"selected\":\"Pagination_selected__1n5rH\",\"arrow\":\"Pagination_arrow__1tMhC\",\"left\":\"Pagination_left__3st8r\",\"right\":\"Pagination_right__2VMKs\",\"disabled\":\"Pagination_disabled__qrB1G\",\"paginationSelectContainer\":\"Pagination_paginationSelectContainer__1rkNu\",\"paginationSpan\":\"Pagination_paginationSpan__14UGc\",\"pagginationSelect\":\"Pagination_pagginationSelect__33oub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3jnAd\",\"header__container\":\"Header_header__container__2ZuHU\",\"header__list\":\"Header_header__list__WwpJU\",\"activeLink\":\"Header_activeLink__2-Pbo\",\"header2__list\":\"Header_header2__list__GaSVc\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://api.coincap.io/v2/assets/\",\r\n});\r\n\r\n// api\r\nexport const cryptoAPI = {\r\n    fetchAll(num: number, currentPage: number) {\r\n        return instance.get<{data: Array<CoinType>}>(`?limit=${num}&offset=${currentPage}`, {});\r\n    },\r\n    fetchCoin(id: string) {\r\n        return instance.get<{data: CoinType}>(`${id}`, {});\r\n    },\r\n    fetchMainCoins(arrCoin: Array<string>) {\r\n        let stringFetch = ''\r\n        arrCoin.forEach((i, index)=>{\r\n            if(index == 0){\r\n                stringFetch = `?ids=${i}`\r\n            } else{\r\n                stringFetch += `,${i}`\r\n            }\r\n        })\r\n        return instance.get<{data: Array<CoinType>}>(stringFetch, {});\r\n    },\r\n    fetchHistoryCoins(idCoin: string, interval: string='d1') {\r\n        return instance.get<{data: Array<HistoryCoinType>}>(`${idCoin}/history?interval=${interval}`, {});\r\n    },\r\n\r\n};\r\n\r\n// types\r\nexport type CoinType = {\r\n    id: string,\r\n    rank: string,\r\n    symbol: string,\r\n    name: string,\r\n    supply: string,\r\n    maxSupply: string,\r\n    marketCapUsd: string,\r\n    volumeUsd24Hr:  string,\r\n    priceUsd: string,\r\n    changePercent24Hr: string,\r\n    vwap24Hr: string,\r\n    explorer: string\r\n};\r\n\r\nexport type HistoryCoinType = {\r\n    priceUsd: string,\r\n    time: number,\r\n    date: string\r\n}\r\n\r\n","import {CoinType, cryptoAPI} from \"../API/cryptoAPI\";\r\nimport {Dispatch} from \"react\";\r\nimport {CommonActionTypeForApp, InferActionType} from \"../App/store\";\r\n\r\n\r\nconst initialState = {\r\n    allCoin: [],\r\n    mainCoins: [],\r\n    threeMainCoins: ['bitcoin', 'ethereum', 'monero'],\r\n    error: null,\r\n    errorMainCoins: null,\r\n    loader: null\r\n};\r\n\r\nexport const MainCryptoReduser =\r\n    (state: InitialStateType = initialState, action: CommonActionTypeForApp): InitialStateType => {\r\n        switch (action.type) {\r\n            case \"MAIN/ALL-CRYPTO\":\r\n                return {...state, allCoin: action.data};\r\n            case \"MAIN/MAIN-COIN\":\r\n                return {...state, mainCoins: action.data};\r\n            case \"MAIN/ERROR\":\r\n                return {...state, error: action.error};\r\n            case \"MAIN/ERROR-MAIN-COINS\":\r\n                return {...state, errorMainCoins: action.error};\r\n            case \"MAIN/LOADER\":\r\n                return {...state, loader: action.loader};\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsMainCrypto = {\r\n    getAllCrypto: (data: Array<CoinType>) => ({type: \"MAIN/ALL-CRYPTO\", data} as const),\r\n    getMainsCoin: (data: Array<CoinType>) => ({type: \"MAIN/MAIN-COIN\", data} as const),\r\n    setError: (error: string | null) => ({type: \"MAIN/ERROR\", error} as const),\r\n    setErrorMainCoins: (error: string | null) => ({type: \"MAIN/ERROR-MAIN-COINS\", error} as const),\r\n    setLoader: (loader: boolean|null) => ({type: \"MAIN/LOADER\", loader} as const)\r\n}\r\n\r\n// thunks\r\nexport const getMainCoin = (\r\n    arrCoin: Array<string>\r\n) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(actionsMainCrypto.setLoader(true))\r\n        let res = await cryptoAPI.fetchMainCoins(arrCoin);\r\n        dispatch(actionsMainCrypto.getMainsCoin(res.data.data))\r\n        dispatch(actionsMainCrypto.setErrorMainCoins(null))\r\n    } catch (e: any) {\r\n        dispatch(actionsMainCrypto.setErrorMainCoins(e.message))\r\n    } finally {\r\n        dispatch(actionsMainCrypto.setLoader(false))\r\n    }\r\n};\r\n\r\nexport const getAllCoin = (porcion: number, currentPage: number) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(actionsMainCrypto.setLoader(true))\r\n        let res = await cryptoAPI.fetchAll(porcion, currentPage);\r\n        dispatch(actionsMainCrypto.getAllCrypto(res.data.data))\r\n        dispatch(actionsMainCrypto.setError(null))\r\n    } catch (e: any) {\r\n        console.dir(e)\r\n        dispatch(actionsMainCrypto.setError(e.message))\r\n    } finally {\r\n        dispatch(actionsMainCrypto.setLoader(false))\r\n    }\r\n};\r\n\r\n\r\n// types\r\nexport type InitialStateType = {\r\n    allCoin: Array<CoinType>\r\n    mainCoins: Array<CoinType>\r\n    threeMainCoins: Array<string>\r\n    error: string | null\r\n    errorMainCoins: string | null\r\n    loader: boolean|null\r\n}\r\nexport type CryptoActionType = InferActionType<typeof actionsMainCrypto>\r\n\r\n\r\n\r\n\r\n\r\n","import {useMemo} from \"react\";\r\n\r\ntype usePaginationType = {\r\n    currentPage: number\r\n    totalCount: number\r\n    pageSize: number\r\n    siblingCount: number\r\n}\r\n\r\nexport const DOTS = ''\r\n\r\nconst range = (start: number, end: number) => {\r\n    let length = end - start + 1;\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n                                  currentPage,\r\n                                  totalCount,\r\n                                  siblingCount,\r\n                                  pageSize\r\n                              }: usePaginationType) => {\r\n    const paginationRange = useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n        // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n        const totalPageNumbers = siblingCount + 5;\r\n\r\n        /*\r\n          Case 1:\r\n          If the number of pages is less than the page numbers we want to show in our\r\n          paginationComponent, we return the range [1..totalPageCount]\r\n        */\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        /*\r\n            Calculate left and right sibling index and make sure they are within range 1 and totalPageCount\r\n        */\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n            currentPage + siblingCount,\r\n            totalPageCount\r\n        );\r\n\r\n        /*\r\n          We do not show dots just when there is just one page number to be inserted between the extremes of sibling and the page limits i.e 1 and totalPageCount. Hence we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPageCount - 2\r\n        */\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        /*\r\n            Case 2: No left dots to show, but rights dots to be shown\r\n        */\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        /*\r\n            Case 3: No right dots to show, but left dots to be shown\r\n        */\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(\r\n                totalPageCount - rightItemCount + 1,\r\n                totalPageCount\r\n            );\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        /*\r\n            Case 4: Both left and right dots to be shown\r\n        */\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        }\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n    return paginationRange;\r\n};","import React from 'react';\r\nimport classnames from './Pagination.module.scss';\r\nimport {usePagination, DOTS} from './usePagination';\r\nimport { nanoid } from 'nanoid'\r\n\r\ntype PaginationType = {\r\n    className?: string\r\n    currentPage: number\r\n    totalCount: number\r\n    pageSize: number\r\n    siblingCount: number\r\n    setPackPage: (value: number) => void\r\n}\r\n\r\nexport const Pagination = ({\r\n                               currentPage,\r\n                               totalCount,\r\n                               pageSize,\r\n                               siblingCount,\r\n                               setPackPage\r\n                           }: PaginationType) => {\r\n\r\n\r\n    const paginationRange = usePagination({\r\n        currentPage,\r\n        totalCount,\r\n        siblingCount,\r\n        pageSize\r\n    });\r\n\r\n    // If there are less than 2 times in pagination range we shall not render the component\r\n\r\n    if (paginationRange) {\r\n        if (currentPage === 0 || paginationRange.length < 2) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    const onNext = () => {\r\n        setPackPage(currentPage + 1)\r\n    };\r\n\r\n    const onPrevious = () => {\r\n        setPackPage(currentPage - 1)\r\n    };\r\n\r\n\r\n    // @ts-ignore\r\n    let lastPage = paginationRange[paginationRange.length - 1]\r\n\r\n\r\n    return (\r\n        <ul\r\n            className={classnames.paginationContainer}\r\n        >\r\n            {/* Left navigation arrow */}\r\n            <li\r\n                className={`${classnames.paginationItem} ${currentPage === 1 && classnames.disabled}`}\r\n                onClick={onPrevious}\r\n            >\r\n                <div className={`${classnames.arrow} ${classnames.left}`}/>\r\n            </li>\r\n            {paginationRange && paginationRange.map(pageNumber => {\r\n\r\n                // If the pageItem is a DOT, render the DOTS unicode character\r\n                if (pageNumber === DOTS) {\r\n                    return <li\r\n                        key={nanoid()}\r\n                        className={`${classnames.paginationItem} ${classnames.dots}`}>&#8230;</li>;\r\n                }\r\n\r\n                // Render our Page Pills\r\n                return (\r\n                    <li\r\n                        key={nanoid()}\r\n                        className={`${classnames.paginationItem} ${pageNumber === currentPage && classnames.selected}`}\r\n                        onClick={() =>\r\n                            setPackPage(+pageNumber)\r\n                        }\r\n                    >\r\n                        {pageNumber}\r\n                    </li>\r\n                );\r\n            })}\r\n            {/*  Right Navigation arrow */}\r\n            <li\r\n\r\n                className={`${classnames.paginationItem} ${currentPage === lastPage && classnames.disabled}`}\r\n                onClick={onNext}\r\n            >\r\n                <div className={`${classnames.arrow} ${classnames.right}`}/>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\n","import React from \"react\";\r\nimport style from \"./Pagination.module.scss\";\r\nimport {Pagination} from \"./Pagination\";\r\n\r\ntype PackPropsType = {\r\n    pageCount: number\r\n    currentPage: number\r\n    cardPacksTotalCount: number\r\n    setPackPageCount: (val: number) => void\r\n    setPackPage: (val: number) => void\r\n}\r\n\r\n\r\nexport const PaginationWrapper: React.FC<PackPropsType> = ({\r\n                                                               cardPacksTotalCount,\r\n                                                               currentPage,\r\n                                                               pageCount,\r\n                                                               setPackPageCount,\r\n                                                               setPackPage\r\n                                                           }) => {\r\n\r\n\r\n    return (\r\n        <div className={style.paginationWrapperContainer}>\r\n\r\n            <Pagination\r\n                className={''}\r\n                currentPage={currentPage}\r\n                totalCount={cardPacksTotalCount}\r\n                pageSize={pageCount}\r\n                siblingCount={1}\r\n                setPackPage={setPackPage}\r\n            />\r\n            <div className={style.paginationSelectContainer}>\r\n                <span className={style.paginationSpan}>Show</span>\r\n                <select\r\n                    defaultValue={pageCount}\r\n                    className={style.pagginationSelect}\r\n                    onChange={(e) =>\r\n                    setPackPageCount(+e.currentTarget.value)\r\n                }>\r\n                    <option  value={3}>3</option>\r\n                    <option   value={5}>5</option>\r\n                    <option   value={10}>10</option>\r\n                </select>\r\n                <span className={style.paginationSpan}>Coins per Page</span>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {CommonActionTypeForApp, InferActionType} from \"../App/store\";\r\n\r\nconst initialState = {\r\n    pageCount: 3,\r\n    page: 1,\r\n    pageTotalCount: 2000\r\n};\r\n\r\nexport const paginationReducer =\r\n    (state: initialStateType = initialState, action: CommonActionTypeForApp): initialStateType => {\r\n        switch (action.type) {\r\n            case \"PAGINATION/SET-PAGE\":\r\n                return {...state, page: action.pack}\r\n            case \"PAGINATION/SET-PAGE-COUNT\":\r\n                return {...state, pageCount: action.pack}\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n\r\n// actions\r\nexport const actionsForPagination = {\r\n    setPage: (pack: number) => ({\r\n        type: \"PAGINATION/SET-PAGE\",\r\n        pack\r\n    } as const),\r\n    setPageCount: (pack: number) => ({\r\n        type: \"PAGINATION/SET-PAGE-COUNT\",\r\n        pack\r\n    } as const)\r\n};\r\n\r\n\r\n// types\r\nexport type initialStateType = typeof initialState;\r\nexport type PaginationActionType = InferActionType<typeof actionsForPagination>;\r\n\r\n","import React from \"react\";\r\nimport style from \"./Error.module.scss\";\r\n\r\ntype ErrorPropsType = {\r\n    errorMessage: string | null\r\n}\r\n\r\nexport const ErrorWindow: React.FC<ErrorPropsType> = ({errorMessage}) => {\r\n    let errorClassName = errorMessage ? style.error_block__visible : style.error_block__hidden;\r\n\r\n    return (\r\n        <div className={errorClassName}>\r\n            <span className={style.error_icon}>!</span>\r\n            <span className={style.error_message}>{errorMessage ? errorMessage : null}</span>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.67c2c9a0.svg\";","import React from \"react\";\r\nimport style from \"./Preloader.module.scss\";\r\nimport preloader from \"../../../assets/image/loader.svg\";\r\n\r\n\r\nexport const Preloader = React.memo(() => {\r\n\r\n    return (\r\n        <>\r\n            <div className={style.isFetching}>\r\n                <img src={preloader} alt={'loading spinner'}/>\r\n                <div className={style.overlay}/>\r\n            </div>\r\n        </>\r\n    )\r\n})","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.scss'\r\n\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    color: 'dark-blue' | 'light-blue' | 'red'\r\n    rounded: boolean\r\n    width?: string | number | undefined\r\n}\r\n\r\nexport const Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        color,\r\n        className,\r\n        children,\r\n        rounded,\r\n        width,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const widthBtn = {\r\n        width: width\r\n    }\r\n\r\n    const finalClassName = ` ${s.button} ${rounded ? s.button__rounded : s.button__default} \r\n    ${color === 'dark-blue' ? s.button__blue : color === 'light-blue' ? s.button__light_blue : s.button__red}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            style={widthBtn}\r\n            {...restProps}\r\n        >\r\n            <span>{children}</span>\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Modal.module.scss\";\r\n\r\ntype ModalPropsType = {\r\n   modalActive: boolean\r\n   setModalActive: (value: boolean) => void\r\n}\r\n\r\n\r\nexport const Modal: React.FC<ModalPropsType> = ({modalActive, setModalActive, children}) => {\r\n\r\n   return (\r\n      <div className={modalActive ? `${s.modal} ${s.modal__active}` : s.modal} onClick={() => setModalActive(false)}>\r\n         <div className={modalActive ? `${s.modal__content} ${s.modal__content_active}` : s.modal__content}\r\n              onClick={(e) => e.stopPropagation()}>\r\n            {children}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import {AppRootStateType, CommonActionTypeForApp, InferActionType} from \"../App/store\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Dispatch} from \"react\";\r\nimport {cryptoAPI} from \"../API/cryptoAPI\";\r\nimport {actionsMainCrypto} from \"./MainCryptoReduser\";\r\n\r\n\r\nconst initialState = {\r\n    coinInWallet: [],\r\n    startCoastUSD: 0,\r\n    difference: 0,\r\n    differencePercent: 0,\r\n    error: null,\r\n};\r\n\r\nexport const WalletCryptoReduser =\r\n    (state: InitialStateWalletType = initialState, action: CommonActionTypeForApp): InitialStateWalletType => {\r\n        switch (action.type) {\r\n            case \"WALLET/ADD-COIN\":\r\n                let init = state.coinInWallet\r\n                console.log(init)\r\n                if (init.length === 0) {\r\n                    return {\r\n                        ...state,\r\n                        coinInWallet: [\r\n                            ...state.coinInWallet,\r\n                            {\r\n                                id: nanoid(),\r\n                                sum: 0,\r\n                                name: action.name,\r\n                                symbol: action.symbol,\r\n                                priceUsd: action.priceUsd,\r\n                            }\r\n                        ]\r\n                    }\r\n                } else {\r\n                    if (init.filter(i => i.name == action.name).length === 0) {\r\n                        return {\r\n                            ...state,\r\n                            coinInWallet: [\r\n                                ...state.coinInWallet,\r\n                                {\r\n                                    id: nanoid(),\r\n                                    sum: 0,\r\n                                    name: action.name,\r\n                                    symbol: action.symbol,\r\n                                    priceUsd: action.priceUsd,\r\n                                }\r\n                            ]\r\n                        }\r\n                    } else {\r\n                        return state\r\n                    }\r\n                }\r\n            case \"WALLET/EDIT-SUM\":\r\n                return {\r\n                    ...state,\r\n                    coinInWallet: state.coinInWallet.map(i => i.id === action.id ? {...i, sum: action.sum} : i)\r\n                };\r\n            case \"WALLET/DELETE-COIN\":\r\n                return {\r\n                    ...state,\r\n                    coinInWallet: state.coinInWallet.filter(i => i.id !== action.id)\r\n                };\r\n            case \"WALLET/ADD-START-COAST\":\r\n                return {\r\n\r\n                    ...state,\r\n                    startCoastUSD: action.num\r\n                };\r\n            case \"WALLET/ADD-DIFFERENCE\":\r\n                return {\r\n                    ...state,\r\n                    difference: action.num\r\n                };\r\n            case \"WALLET/ADD-DIFFERENCE-PERCENT\":\r\n                return {\r\n                    ...state,\r\n                    differencePercent: action.num\r\n                };\r\n            case \"WALLET/ERROR\":\r\n                return {...state, error: action.error};\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsWaletCrypto = {\r\n    addCoin: (name: string, symbol: string, priceUsd: string) => ({\r\n        type: \"WALLET/ADD-COIN\",\r\n        name,\r\n        symbol,\r\n        priceUsd\r\n    } as const),\r\n    editSum: (sum: number, id: string) => ({type: \"WALLET/EDIT-SUM\", sum, id} as const),\r\n    deleteCoin: (id: string) => ({type: \"WALLET/DELETE-COIN\", id} as const),\r\n    getStartCoastUSD: (num: number) => ({type: \"WALLET/ADD-START-COAST\", num} as const),\r\n    getDifference: (num: number) => ({type: \"WALLET/ADD-DIFFERENCE\", num} as const),\r\n    getDifferencePercent: (num: number) => ({type: \"WALLET/ADD-DIFFERENCE-PERCENT\", num} as const),\r\n    setError: (error: string | null) => ({type: \"WALLET/ERROR\", error} as const),\r\n}\r\n\r\n// thunks\r\nexport const getStartandCurrentCost = () => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n    let coins = getState().wallet.coinInWallet\r\n    const reMathWallet = () => {\r\n        let sumWallet = 0\r\n        coins.forEach((i) => {\r\n            sumWallet += +i.priceUsd * +i.sum\r\n        })\r\n        return sumWallet\r\n    }\r\n    dispatch(actionsWaletCrypto.getStartCoastUSD(reMathWallet()))\r\n}\r\n\r\n\r\nexport const getCurrentCost = () => async (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n\r\n    try {\r\n        let coins = getState().wallet.coinInWallet\r\n        if (coins.length === 0) {\r\n            dispatch(actionsWaletCrypto.getDifference(0))\r\n            dispatch(actionsWaletCrypto.getDifferencePercent(0))\r\n\r\n        } else {\r\n            let startCoinCoast = getState().wallet.startCoastUSD\r\n            let coinsNameinWallet: Array<string> = []\r\n            coins.forEach((i) => {\r\n                coinsNameinWallet.push(i.name)\r\n            })\r\n            dispatch(actionsMainCrypto.setLoader(true))\r\n            let res = await cryptoAPI.fetchMainCoins(coinsNameinWallet)\r\n            dispatch(actionsWaletCrypto.setError(null))\r\n            let newCoins = res.data.data\r\n            let sumWallet = 0\r\n            let i = 0\r\n            do {\r\n                sumWallet += +newCoins[i].priceUsd * +coins[i].sum;\r\n                i++\r\n            } while (i < newCoins.length)\r\n            let delta = startCoinCoast - sumWallet\r\n            let deltaPersent = ((startCoinCoast - sumWallet) / startCoinCoast) * 100\r\n            dispatch(actionsWaletCrypto.getDifference(delta))\r\n            dispatch(actionsWaletCrypto.getDifferencePercent(deltaPersent))\r\n        }\r\n    } catch (e: any) {\r\n        dispatch(actionsWaletCrypto.setError(e.message))\r\n    } finally {\r\n        dispatch(actionsMainCrypto.setLoader(false))\r\n    }\r\n}\r\n\r\n\r\n// types\r\nexport type InitialStateWalletType = {\r\n    coinInWallet: Array<CoinInWalletType>\r\n    startCoastUSD: number\r\n    difference: number\r\n    differencePercent: number\r\n    error: string | null\r\n};\r\n\r\nexport type CoinInWalletType = {\r\n    id: string\r\n    sum: number\r\n    name: string\r\n    symbol: string\r\n    priceUsd: string\r\n}\r\nexport type WalletActionType = InferActionType<typeof actionsWaletCrypto>\r\n\r\n\r\n\r\n\r\n\r\n","import {CoinType, cryptoAPI, HistoryCoinType} from \"../API/cryptoAPI\";\r\nimport {Dispatch} from \"react\";\r\nimport {CommonActionTypeForApp, InferActionType} from \"../App/store\";\r\nimport {actionsMainCrypto} from \"./MainCryptoReduser\";\r\n\r\n\r\nconst initialState = {\r\n    oneMainCoin: '',\r\n    coin: null,\r\n    history: null,\r\n    error: null,\r\n};\r\n\r\nexport const CoinCryptoReduser =\r\n    (state: InitialStateType = initialState, action: CommonActionTypeForApp): InitialStateType => {\r\n        switch (action.type) {\r\n            case \"COIN/ONE-MAIN-COIN\":\r\n                return {...state, oneMainCoin: action.data};\r\n            case \"COIN/ONE\":\r\n                return {...state, coin: action.data};\r\n            case \"COIN/HISTORY-COIN\":\r\n                return {...state, history: action.history};\r\n            case \"COIN/ERROR\":\r\n                return {...state, error: action.error};\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsCoinCrypto = {\r\n    getOneMainCoin: (data: string) => ({type: \"COIN/ONE-MAIN-COIN\", data} as const),\r\n    getOneCoin: (data: CoinType) => ({type: \"COIN/ONE\", data} as const),\r\n    getHistoryCoin: (history: Array<HistoryCoinType>) => ({type: \"COIN/HISTORY-COIN\", history} as const),\r\n    setError: (error: string | null) => ({type: \"COIN/ERROR\", error} as const),\r\n    setErrorCoin: (error: string | null) => ({type: \"COIN/ERROR-COIN\", error} as const),\r\n};\r\n\r\n// thunks\r\n\r\nexport const getChangedForCoin = (id: string, int?: string) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(actionsMainCrypto.setLoader(true))\r\n        let res = await cryptoAPI.fetchHistoryCoins(id, int);\r\n        dispatch(actionsCoinCrypto.getHistoryCoin(res.data.data))\r\n        let res2 = await cryptoAPI.fetchCoin(id)\r\n        dispatch(actionsCoinCrypto.getOneCoin(res2.data.data))\r\n        dispatch(actionsCoinCrypto.setError(null))\r\n    } catch (e: any) {\r\n        dispatch(actionsCoinCrypto.setError(e.message))\r\n    } finally {\r\n        dispatch(actionsMainCrypto.setLoader(false))\r\n    }\r\n};\r\n\r\n// types\r\nexport type InitialStateType = {\r\n    coin: CoinType | null,\r\n    history: Array<HistoryCoinType> | null,\r\n    error: string | null\r\n    oneMainCoin: string\r\n};\r\nexport type CoinActionType = InferActionType<typeof actionsCoinCrypto>\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./TableList.module.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../App/store\";\r\nimport {CoinType} from \"../../../API/cryptoAPI\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Modal} from \"../../common/Modal/Modal\";\r\nimport {actionsWaletCrypto} from \"../../../Redusers/WalletCryptoReduser\";\r\nimport {actionsCoinCrypto} from \"../../../Redusers/CoinCryptoReduser\";\r\n\r\n\r\n\r\nexport const TableList: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let allCoins = useSelector<AppRootStateType, Array<CoinType>>(state => state.allCrypto.allCoin)\r\n    const [addModal, setAddModal] = useState(false);\r\n\r\n    const handleClickCoin = (id: string) => {\r\n        dispatch(actionsCoinCrypto.getOneMainCoin(id))\r\n    }\r\n\r\n    const handleAddCoin = (name: string, sumbol: string, priceUsd: string) => {\r\n        dispatch(actionsWaletCrypto.addCoin(name, sumbol, priceUsd))\r\n    }\r\n\r\n    return (\r\n        <div className={s.table}>\r\n            <table className={s.table__block}>\r\n                <thead>\r\n                <tr>\r\n                    <th className={s.col1}>Rank</th>\r\n                    <th className={s.col2}>Name</th>\r\n                    <th className={s.col3}>Price (Usd)</th>\r\n                    <th className={s.col4}>Change Percent 24hr</th>\r\n                    <th className={s.col5}>Symbol</th>\r\n                    <th className={s.col6}>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {allCoins.map((c) => {\r\n                    return <tr key={nanoid()}>\r\n                        <th className={s.col1}>{(+c.rank).toFixed(0)}</th>\r\n                        <th className={s.col2} style={{\r\n                            cursor: 'pointer'\r\n                        }}\r\n                            onClick={() => handleClickCoin(c.id)}>{c.name}</th>\r\n                        <th className={s.col3}>{(+c.priceUsd).toFixed(3)}</th>\r\n                        <th className={s.col4}>{(+c.changePercent24Hr).toFixed(3)}</th>\r\n                        <th className={s.col5}>{c.symbol}</th>\r\n                        <th className={`${s.col6} ${s.btn}`}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setAddModal(true)\r\n                                    handleAddCoin(c.id, c.symbol, c.priceUsd)\r\n                                }}\r\n                                rounded={false}\r\n                                color='light-blue'>Add to wallet\r\n                            </Button>\r\n                        </th>\r\n\r\n                    </tr>\r\n                })\r\n                }\r\n                </tbody>\r\n            </table>\r\n            <Modal modalActive={addModal} setModalActive={setAddModal}>\r\n                The coin has been successfully added to the wallet.\r\n                To edit, go to the <Link to=\"/Crypto_wallet\">Wallet</Link> or add more\r\n\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Headings.module.scss\";\r\n\r\nexport const H2: React.FC = ({children}) => {\r\n   return <h2 className={s.subtitle}>{children}</h2>\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/store\";\r\nimport {actionsMainCrypto, getAllCoin} from \"../../Redusers/MainCryptoReduser\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PaginationWrapper} from \"../common/Pagination/PaginationWrapper\";\r\nimport {actionsForPagination} from \"../../Redusers/paginationReduser\";\r\nimport {ErrorWindow} from \"../common/Error/ErrorWindow\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {TableList} from \"./TableList/TableList\";\r\nimport s from \"./AllCrypto.module.scss\";\r\nimport {H2} from \"../common/Headings/H2\";\r\n\r\nconst AllCrypto = React.memo(() => {\r\n    const dispatch = useDispatch();\r\n\r\n    let loader = useSelector<AppRootStateType, boolean | null>(state => state.allCrypto.loader)\r\n    const pageTotalCount = useSelector<AppRootStateType, number>(state => state.pagination.pageTotalCount)\r\n    const currentPage = useSelector<AppRootStateType, number>(state => state.pagination.page)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.pagination.pageCount)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.allCrypto.error)\r\n    const oneMainCoin = useSelector<AppRootStateType, string>(state => state.coinCrypto.oneMainCoin)\r\n\r\n\r\n    const setPageCount = (page: number) => {\r\n        dispatch(actionsForPagination.setPageCount(page))\r\n    }\r\n\r\n\r\n    const [needlyPage, setNeedlyPage] = useState(0)\r\n    const setPage = (page: number) => {\r\n        dispatch(actionsForPagination.setPage(page))\r\n        setNeedlyPage((page - 1) * pageCount)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let int = setTimeout(() => {\r\n            dispatch(actionsMainCrypto.setError(null))\r\n        }, 3000)\r\n        return () => clearTimeout(int)\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCoin(pageCount, needlyPage))\r\n    }, [pageCount, needlyPage])\r\n\r\n    if (loader) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (oneMainCoin !== '') {\r\n        return <Redirect to={\"/Crypto_coin\"}\r\n\r\n        />\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <H2>All coins</H2>\r\n            <div className={s.wrapper}>\r\n\r\n                <TableList/>\r\n\r\n                {error && <ErrorWindow errorMessage={error}/>}\r\n                <PaginationWrapper\r\n                    cardPacksTotalCount={pageTotalCount}\r\n                    currentPage={currentPage}\r\n                    pageCount={pageCount}\r\n                    setPackPageCount={setPageCount}\r\n                    setPackPage={setPage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default AllCrypto\r\n","import React from 'react';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/store\";\r\nimport {HistoryCoinType} from \"../../API/cryptoAPI\";\r\n\r\n\r\nclass Label extends React.Component<{ offset: number, position: string, value: string }> {\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const Chart = () => {\r\n    let history = useSelector<AppRootStateType, Array<HistoryCoinType> | null>(state => state.coinCrypto.history)\r\n    let arr: any = []\r\n    let data = history\r\n    data && data.forEach(i => {\r\n        arr.push({name: new Date(i.time), interval: +i.priceUsd})\r\n    })\r\n\r\n    return (\r\n        <LineChart\r\n            width={800}\r\n            height={400}\r\n            data={arr}\r\n            margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <XAxis dataKey=''>\r\n                <Label value={`Date from ${new Date(arr[0])} to ${new Date(arr[arr.length - 1])}`} offset={0}\r\n                       position=\"bottom\"/>\r\n            </XAxis>\r\n            <YAxis/>\r\n            <Tooltip/>\r\n            <Legend/>\r\n            <Line name=\"Coast\" type=\"monotone\" dataKey=\"interval\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\r\n        </LineChart>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"../../v1-AllCrypto/TableList/TableList.module.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../App/store\";\r\nimport {CoinType} from \"../../../API/cryptoAPI\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Modal} from \"../../common/Modal/Modal\";\r\nimport {actionsWaletCrypto} from \"../../../Redusers/WalletCryptoReduser\";\r\n\r\n\r\n\r\nexport const TableCoinList: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [addModal, setAddModal] = useState(false);\r\n    let oneCoins = useSelector<AppRootStateType, CoinType | null>(state => state.coinCrypto.coin)\r\n\r\n\r\n    const handleAddCoin = (name: string, sumbol: string, priceUsd: string) => {\r\n        dispatch(actionsWaletCrypto.addCoin(name, sumbol, priceUsd))\r\n    }\r\n\r\n    return (\r\n        <div className={s.table}>\r\n            <table className={s.table__blockCoin}>\r\n                <thead>\r\n                <tr>\r\n                    <th className={s.col1}>Rank</th>\r\n                    <th className={s.col2}>Name</th>\r\n                    <th className={s.col3}>Price (Usd)</th>\r\n                    <th className={s.col4}>Change Percent 24hr</th>\r\n                    <th className={s.col5}>Symbol</th>\r\n                    <th className={s.col6}>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {oneCoins &&\r\n                <tr>\r\n                    <th className={s.col1}>{(+oneCoins.rank).toFixed(0)}</th>\r\n                    <th className={s.col2}>{oneCoins.name}</th>\r\n                    <th className={s.col3}>{(+oneCoins.priceUsd).toFixed(3)}</th>\r\n                    <th className={s.col4}>{(+oneCoins.changePercent24Hr).toFixed(3)}</th>\r\n                    <th className={s.col5}>{oneCoins.symbol}</th>\r\n                    <th className={`${s.col6} ${s.btn}`}>\r\n                        <Button\r\n                            onClick={() => {\r\n                                setAddModal(true)\r\n                                oneCoins && handleAddCoin(oneCoins.id, oneCoins.symbol, oneCoins.priceUsd)\r\n                            }}\r\n                            rounded={false}\r\n                            color='light-blue'>Add to wallet\r\n                        </Button>\r\n                    </th>\r\n\r\n                </tr>\r\n                }\r\n                </tbody>\r\n            </table>\r\n\r\n            <Modal modalActive={addModal} setModalActive={setAddModal}>\r\n                The coin has been successfully added to the wallet.\r\n                To edit, go to the <Link to=\"/Crypto_wallet\">Wallet</Link> or add more\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/store\";\r\nimport {actionsCoinCrypto, getChangedForCoin} from \"../../Redusers/CoinCryptoReduser\";\r\nimport {Chart} from \"../v4-Chart/Chart\";\r\nimport {ErrorWindow} from \"../common/Error/ErrorWindow\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {H2} from \"../common/Headings/H2\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from \"../v1-AllCrypto/AllCrypto.module.scss\";\r\nimport {TableCoinList} from \"./TableCoinList/TableCoinList\";\r\n\r\n\r\nconst CoinCrypto = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n\r\n    const idLocation = useSelector<AppRootStateType, string>(state => state.coinCrypto.oneMainCoin)\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.coinCrypto.error)\r\n    let loader = useSelector<AppRootStateType, boolean | null>(state => state.allCrypto.loader)\r\n\r\n\r\n    useEffect(() => {\r\n        let int = setTimeout(() => {\r\n            dispatch(actionsCoinCrypto.setError(null))\r\n        }, 3000)\r\n        return () => clearTimeout(int)\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n            dispatch(getChangedForCoin(idLocation))\r\n        }, [idLocation]\r\n    )\r\n    if (loader) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (idLocation === '') {\r\n        return (\r\n            <Redirect to={\"/Crypto_list\"}>Chose coin</Redirect>\r\n        )\r\n    }\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.wrapper}>\r\n                {error && <ErrorWindow errorMessage={error}/>}\r\n                <H2>{idLocation}</H2>\r\n                <TableCoinList/>\r\n                <div className={s.chart}>\r\n                    <Chart/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport default CoinCrypto\r\n","import React from \"react\";\r\n\r\n\r\nexport const UserSvg: React.FC = () => {\r\n\r\n    return <svg style={{width: '25px', height: '25px'}}version=\"1.2\" baseProfile=\"tiny\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                x=\"0px\" y=\"0px\" viewBox=\"0 0 256 238\">\r\n        <path d=\"M122.7,109.9l0.1-30.1c8.5,0,35.2-2.6,35.2,15.2C157.9,112,131.2,109.9,122.7,109.9z M164.8,141.8L164.8,141.8\r\n\tc0.1-19.5-32-16.7-42.2-16.7l-0.1,33.2C132.7,158.3,164.8,160.5,164.8,141.8z M10.6,119.9C10.6,54.9,62.8,2,127.8,2\r\n\tc65,0,117.5,52.5,117.5,117.5c0,65-52.9,117.5-117.5,117.5S10.6,184.6,10.6,119.9z M98.1,113.5c-0.5,0-1,0-1.6,0L96.3,153\r\n\tc-0.3,1.9-1.4,5-5.7,5c0.2,0.2-11,0-11,0l-3.1,18l19.6,0.1c3.7,0,7.2,0.1,10.8,0.1l-0.1,25l15.1,0.1l0.1-24.8\r\n\tc4.1,0.1,8.1,0.1,12,0.2l-0.1,24.7l15.1,0.1l0.1-25c25.3-1.4,43.1-7.7,45.4-31.5c1.8-19.2-7.1-27.7-21.5-31.2\r\n\tc8.8-4.4,14.2-12.2,13-25.3h0c-1.7-17.9-17-23.9-36.5-25.7l0.1-24.8l-15.1-0.1L134.5,62c-4,0-8,0.1-12,0.1l0.1-24.3l-15.1-0.1\r\n\tl-0.1,24.8c-3.3,0.1-6.5,0.1-9.6,0.1l0-0.1l-20.8-0.1L77,78.5c0,0,11.1-0.2,10.9,0c6.1,0,8.1,3.6,8.6,6.6l-0.1,28.2\r\n\tC96.9,113.4,97.5,113.4,98.1,113.5z\"/>\r\n    </svg>\r\n\r\n}\r\n","import React from \"react\";\n\n\nexport const WalletSvg: React.FC = () => {\n\n    return <svg style={{width: '25px', height: '25px'}} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 76.304 76.304\">\n        <g>\n            <path d=\"M72.325,33.234v-2.947c0-5.389-3.698-9.919-8.686-11.217l-0.009-4.859c0-4.742-3.859-8.601-8.603-8.601h-0.455L14.31,18.1\n\t\tc-0.917,0.053-1.787,0.265-2.604,0.584h-0.105C5.205,18.684,0,23.889,0,30.287v28.804c0,6.397,5.204,11.603,11.601,11.603h49.123\n\t\tc6.396,0,11.601-5.205,11.601-11.603V55.26c2.323-0.899,3.979-3.151,3.979-5.789v-10.45C76.303,36.385,74.648,34.133,72.325,33.234\n\t\tz M70.303,49.47c0,0.118-0.093,0.211-0.211,0.211H53.851c-0.118,0-0.21-0.093-0.21-0.211V39.021c0-0.115,0.094-0.209,0.21-0.209\n\t\th16.241c0.116,0,0.211,0.094,0.211,0.209V49.47z M55.398,11.637c1.261,0.18,2.232,1.266,2.232,2.579l0.008,4.469H32.679\n\t\tL55.398,11.637z M60.724,64.693H11.602c-3.093,0-5.601-2.509-5.601-5.603V30.287c0-3.095,2.508-5.603,5.601-5.603h49.122\n\t\tc3.094,0,5.601,2.508,5.601,5.603v2.525H53.851c-3.424,0-6.21,2.785-6.21,6.209V49.47c0,3.425,2.786,6.211,6.21,6.211h12.474v3.41\n\t\tC66.325,62.184,63.818,64.693,60.724,64.693z\"/>\n        </g>\n\n    </svg>\n\n}\n","import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/store\";\r\nimport {CoinType} from \"../../API/cryptoAPI\";\r\nimport {actionsMainCrypto, getMainCoin} from \"../../Redusers/MainCryptoReduser\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {actionsWaletCrypto, getCurrentCost} from \"../../Redusers/WalletCryptoReduser\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport {ErrorWindow} from \"../common/Error/ErrorWindow\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {Button} from \"../common/Button/Button\";\r\nimport style from \"./Header.module.scss\";\r\nimport {UserSvg} from \"../../assets/icon/UserSVG\";\r\nimport {WalletSvg} from \"../../assets/icon/WalletSVG\";\r\nimport {actionsCoinCrypto} from \"../../Redusers/CoinCryptoReduser\";\r\n\r\nconst Header = React.memo(() => {\r\n\r\n        const dispatch = useDispatch();\r\n        let mainCoins = useSelector<AppRootStateType, Array<CoinType>>(state => state.allCrypto.mainCoins)\r\n        let arrCoin = useSelector<AppRootStateType, Array<string>>(state => state.allCrypto.threeMainCoins)\r\n        let startCoast = useSelector<AppRootStateType, number>(state => state.wallet.startCoastUSD)\r\n        let getDifference = useSelector<AppRootStateType, number>(state => state.wallet.difference)\r\n        let differencePercent = useSelector<AppRootStateType, number>(state => state.wallet.differencePercent)\r\n        const error = useSelector<AppRootStateType, string | null>(state => state.wallet.error)\r\n        const errorMainCoins = useSelector<AppRootStateType, string | null>(state => state.allCrypto.errorMainCoins)\r\n        let loader = useSelector<AppRootStateType, boolean | null>(state => state.allCrypto.loader)\r\n\r\n\r\n        useEffect(() => {\r\n            let int = setTimeout(() => {\r\n                errorMainCoins && dispatch(actionsMainCrypto.setErrorMainCoins(null))\r\n                error && dispatch(actionsWaletCrypto.setError(null))\r\n            }, 3000)\r\n            return () => clearTimeout(int)\r\n        }, [error, errorMainCoins])\r\n\r\n        useEffect(() => {\r\n                dispatch(getMainCoin(arrCoin))\r\n            }, []\r\n        )\r\n\r\n        const hendleRefresh = useCallback(() => {\r\n            dispatch(getCurrentCost())\r\n        }, [])\r\n\r\n\r\n        if (loader) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n\r\n            <header className={style.header}>\r\n                <div className={style.header__container}>\r\n                    <h2>Cryptocurrency rates</h2>\r\n                    <nav className={style.header__nav}>\r\n                        <ul className={style.header__list}>\r\n                            <li>\r\n                                <NavLink\r\n                                    onClick={() => {\r\n                                        dispatch(actionsCoinCrypto.getOneMainCoin(''))\r\n                                    }}\r\n                                    to={\"/Crypto_list\"} activeClassName={style.activeLink}>\r\n                                    <div style={{color: 'red'}}><UserSvg/></div>\r\n                                    Main</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink\r\n                                    onClick={() => {\r\n                                        dispatch(actionsCoinCrypto.getOneMainCoin(''))\r\n                                    }}\r\n                                    to={\"/Crypto_wallet\"}\r\n                                    activeClassName={style.activeLink}><WalletSvg/>\r\n                                    Wallet</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div className={style.header__container}>\r\n                    {mainCoins && mainCoins.map(i => {\r\n                        return <ul className={`${style.activeLink} ${style.header2__list}`} key={nanoid()}>\r\n                            <li>{i.name}</li>\r\n                            <li>{(+i.priceUsd).toFixed(3)}</li>\r\n                            <li>{i.symbol}</li>\r\n                        </ul>\r\n                    })\r\n                    }\r\n\r\n                </div>\r\n                <div className={style.header__container}>\r\n                    <ul className={`${style.activeLink} ${style.header2__list}`}>\r\n                        <li style={{color: 'green'}}>Wallet balance: {startCoast.toFixed(3)}</li>\r\n                        <li style={{color: 'red'}}>\r\n                            Delta: {getDifference.toFixed(3)}</li>\r\n                        <li style={{color: 'blue'}}>Delta percentage: {differencePercent.toFixed(3)} %</li>\r\n                    </ul>\r\n                    <Button width={80}\r\n                            color='red'\r\n                            rounded\r\n                            onClick={hendleRefresh}\r\n                    >Refresh\r\n                    </Button>\r\n                </div>\r\n                {error && <ErrorWindow errorMessage={error}/>}\r\n                {errorMainCoins && <ErrorWindow errorMessage={errorMainCoins}/>}\r\n            </header>\r\n        )\r\n    }\r\n)\r\nexport default Header;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./InputField.module.scss\";\r\nimport style from \"../../v1-AllCrypto/TableList/TableList.module.scss\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputFieldPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    spanClassName?: string\r\n    label?: string\r\n}\r\n\r\nexport const InputField: React.FC<InputFieldPropsType> =  (\r\n    {\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        label,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error && s.input__error}`\r\n\r\n    return (\r\n        <th className={`${style.col2} ${s.inputField}`}>\r\n            <label aria-required={true}>{label}</label>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            <div className={s.inputField__error}>\r\n                {error && <span className={finalSpanClassName}>{error}\r\n                </span>}\r\n            </div>\r\n        </th>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {actionsWaletCrypto} from \"../../Redusers/WalletCryptoReduser\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {InputField} from \"../common/InputField/InputField\";\r\nimport s from \"./TableWalletList/TableWalletList.module.scss\";\r\nimport {Button} from \"../common/Button/Button\";\r\n\r\ntype InputForWalletType = {\r\n    name: string\r\n    id: string\r\n    sum: number\r\n    symbol: string\r\n}\r\n\r\n\r\nconst InputForWalet = (props: InputForWalletType) => {\r\n\r\n\r\n    const { id, sum, symbol} = props\r\n    const dispatch = useDispatch();\r\n    const [changeSpan, setChangeSpan] = useState<boolean>(true)\r\n    const [coinValue, setCoinValue] = useState<any>(sum)\r\n\r\n    const handleSubmit = (value: number, id: string) => {\r\n        dispatch(actionsWaletCrypto.editSum(value, id))\r\n        setChangeSpan(true)\r\n    }\r\n    const handleEdit = () => {\r\n        setChangeSpan(false)\r\n    }\r\n\r\n\r\n    const [errors, setErrors] = useState('');\r\n    const [disButton, setDisButton] = useState(false);\r\n\r\n\r\n    const validate = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        if (!e.currentTarget.value) {\r\n            setErrors('enter any value');\r\n            setDisButton(true)\r\n        } else if (/^0/.test(e.currentTarget.value)) {\r\n            setErrors('enter any value');\r\n            setDisButton(true)\r\n        } else if (!/^[-+]?[0-9]*[.,]?[0-9]+(?:[eE][-+]?[0-9]+)?$/i.test(e.currentTarget.value)) {\r\n            setCoinValue(sum)\r\n            setErrors(\"Invalid value\")\r\n            setDisButton(true)\r\n\r\n        } else {\r\n            setDisButton(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {changeSpan ? <>\r\n                    <th className={s.col2}>\r\n                       <span style={{\r\n                           // width: \"\",\r\n                           height: \"10px\",\r\n                           borderBottom: '1px solid red'\r\n                       }}>{sum}</span>\r\n                    </th>\r\n                    <th className={s.col3}>\r\n                        {symbol}\r\n                    </th>\r\n                    <th className={s.col4}>\r\n                        <Button\r\n                            width={80}\r\n                            color='light-blue'\r\n                            rounded\r\n                            onClick={handleEdit}>Edit</Button>\r\n                    </th>\r\n                </>\r\n                :\r\n                <>\r\n                    <InputField\r\n                        label={'Coin'}\r\n                        type={'coin'}\r\n                        value={coinValue}\r\n                        onBlur={e => validate(e)}\r\n                        onChange={e => setCoinValue(e.currentTarget.value)}\r\n                        error={errors !== '' ? errors : null}\r\n                    />\r\n                    <th className={s.col3}>\r\n                        {symbol}\r\n                    </th>\r\n                    <th className={s.col4}>\r\n                        <Button\r\n                            width={80}\r\n                            color='light-blue'\r\n                            rounded\r\n                            disabled={disButton}\r\n                            onClick={() => handleSubmit(coinValue, id)\r\n                            }>Save</Button>\r\n                    </th>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputForWalet\r\n","import React, {useCallback} from \"react\";\r\nimport s from \"../../v1-AllCrypto/TableList/TableList.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../App/store\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {\r\n    actionsWaletCrypto,\r\n    CoinInWalletType,\r\n} from \"../../../Redusers/WalletCryptoReduser\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport InputForWalet from \"../InputForWalet\";\r\n\r\n\r\nexport const TableWalletList: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let coins = useSelector<AppRootStateType, Array<CoinInWalletType>>(state => state.wallet.coinInWallet)\r\n    let loader = useSelector<AppRootStateType, boolean | null>(state => state.allCrypto.loader)\r\n\r\n\r\n    const handleDelete = useCallback(\r\n        (id: string) => {\r\n            dispatch(actionsWaletCrypto.deleteCoin(id))\r\n        }\r\n        , [])\r\n\r\n    if (loader) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.table}>\r\n            <table className={s.table__block}>\r\n                <thead>\r\n                <tr>\r\n                    <th className={s.col1}>Name</th>\r\n                    <th className={s.col2}>Value</th>\r\n                    <th className={s.col3}>Symbol</th>\r\n                    <th className={s.col4}>Edit</th>\r\n                    <th className={s.col5}>Delete</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {coins.map((i) => {\r\n                    return <tr key={nanoid()}>\r\n                        <th className={s.col1}>{i.name}</th>\r\n\r\n                        <InputForWalet\r\n                            name={i.name}\r\n                            id={i.id}\r\n                            sum={i.sum}\r\n                            symbol={i.symbol}\r\n                        />\r\n                        <th className={`${s.col5} ${s.btn}`}>\r\n                            <Button\r\n                                width={80}\r\n                                color='red'\r\n                                rounded\r\n                                onClick={() => handleDelete(i.id)}\r\n                            >Delete</Button>\r\n                        </th>\r\n                    </tr>\r\n                })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/store\";\r\nimport {\r\n    getCurrentCost,\r\n    getStartandCurrentCost\r\n} from \"../../Redusers/WalletCryptoReduser\";\r\nimport {Button} from \"../common/Button/Button\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {H2} from \"../common/Headings/H2\";\r\nimport s from \"../v1-AllCrypto/AllCrypto.module.scss\";\r\nimport {TableWalletList} from \"./TableWalletList/TableWalletList\";\r\n\r\nconst Wallet = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    let loader = useSelector<AppRootStateType, boolean | null>(state => state.allCrypto.loader)\r\n\r\n    const handleSubmit = useCallback(() => {\r\n            dispatch(getStartandCurrentCost())\r\n            dispatch(getCurrentCost())\r\n        }\r\n        , [])\r\n\r\n\r\n    if (loader) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.container}>\r\n            <H2>All coins</H2>\r\n\r\n            <div className={s.wrapper}>\r\n                <TableWalletList/>\r\n            </div>\r\n            <Button\r\n                style={{\r\n                    width: \"80px\",\r\n                    margin: \"15px 0\",\r\n                }}\r\n                color={'dark-blue'}\r\n                onClick={handleSubmit}\r\n                rounded\r\n            >Submit\r\n            </Button>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Wallet;\r\n","import React from 'react';\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport AllCrypto from \"../a1-root/v1-AllCrypto/AllCrypto\";\r\nimport CoinCrypto from \"../a1-root/v2-CoinCrypto/CoinCrypto\";\r\nimport NaviBar from \"../a1-root/Header/Header\";\r\nimport Wallet from \"../a1-root/v3-Wallet/Wallet\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n            <NaviBar/>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <AllCrypto/>}/>\r\n                <Route exact path={\"/Crypto_list\"} render={() => <AllCrypto/>}/>\r\n                <Route exact path={\"/Crypto_coin\"} render={() => <CoinCrypto/>}/>\r\n                <Route exact path={\"/Crypto_wallet\"} render={() => <Wallet/>}/>\r\n                <Route path={\"*\"} render={() => <h1>404: PAGE NOT FOUND</h1>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport {CryptoActionType, MainCryptoReduser} from \"../Redusers/MainCryptoReduser\";\r\nimport {CoinActionType, CoinCryptoReduser} from \"../Redusers/CoinCryptoReduser\";\r\nimport {WalletActionType, WalletCryptoReduser} from \"../Redusers/WalletCryptoReduser\";\r\nimport {loadState, saveState} from \"./localstorage-utils\";\r\nimport {PaginationActionType, paginationReducer} from \"../Redusers/paginationReduser\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    allCrypto: MainCryptoReduser,\r\n    coinCrypto: CoinCryptoReduser,\r\n    wallet: WalletCryptoReduser,\r\n    pagination: paginationReducer\r\n})\r\nexport const store = createStore(rootReducer,loadState(), applyMiddleware(thunk));\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        wallet: store.getState().wallet\r\n    })\r\n})\r\n\r\nexport type CommonActionTypeForApp =\r\n    | CryptoActionType\r\n    | PaginationActionType\r\n    | CoinActionType\r\n    | WalletActionType\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nexport type InferActionType<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\r\n\r\n\r\n\r\n","import {InitialStateWalletType} from \"../Redusers/WalletCryptoReduser\";\n\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('walletState');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\n\nexport const saveState = (state: { wallet: InitialStateWalletType }) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('walletState', serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./App/store\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AllCrypto_container__ZjLo5\",\"wrapper\":\"AllCrypto_wrapper__3V804\",\"chart\":\"AllCrypto_chart__1QUe_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__10yZn\",\"button__rounded\":\"Button_button__rounded__-NmRb\",\"button__default\":\"Button_button__default__13sOw\",\"button__blue\":\"Button_button__blue__dY-yF\",\"button__light_blue\":\"Button_button__light_blue__2_WSb\",\"button__red\":\"Button_button__red__5xCJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2B_cx\",\"modal__active\":\"Modal_modal__active__33r-H\",\"modal__content\":\"Modal_modal__content__1VUuF\",\"modal__content_active\":\"Modal_modal__content_active__ocfNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"InputField_inputField__1wI4M\",\"inputField__error\":\"InputField_inputField__error__1yqh9\",\"input\":\"InputField_input__3Dh1H\",\"input__error\":\"InputField_input__error__1H9Am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableWalletList_table__2N1md\",\"table__block\":\"TableWalletList_table__block__1dYCj\",\"table__modal\":\"TableWalletList_table__modal__3rfoz\",\"col1\":\"TableWalletList_col1__2zk-q\",\"col2\":\"TableWalletList_col2__wxd9Z\",\"col3\":\"TableWalletList_col3__3gMex\",\"col4\":\"TableWalletList_col4__2YwW8\",\"col5\":\"TableWalletList_col5__1i3YU\",\"col6\":\"TableWalletList_col6__DQGqs\",\"table__blockCoin\":\"TableWalletList_table__blockCoin__f2H9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_block__visible\":\"Error_error_block__visible__JV0Ra\",\"moveInLeft\":\"Error_moveInLeft__kscTH\",\"error_block__hidden\":\"Error_error_block__hidden__DTqgV\",\"error_icon\":\"Error_error_icon__1bLOJ\",\"error_message\":\"Error_error_message__1m8eo\"};"],"sourceRoot":""}